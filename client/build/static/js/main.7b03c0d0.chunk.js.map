{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","table","year","dialogAction","FormDialog","addMilestone","obj","React","useState","open","setOpen","desc","useRef","desc_long","date","Date","type","formattedDate","addM","handleClickOpen","month","day","parseInt","current","yFixed","mFixed","dFixed","console","log","handleClose","Promise","resolve","reject","hero","value","fetch","method","body","JSON","stringify","headers","Accept","then","result","json","catch","err","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","label","defaultValue","inputRef","InputLabelProps","shrink","autoFocus","fullWidth","SimpleSelect","callback","val","DialogActions","Button","onClick","color","setParentType","classes","setType","FormControl","variant","className","InputLabel","Select","labelId","onChange","event","target","MenuItem","cellSet","chips","i","length","push","Chip","p","size","TableCell","style","cellStyle","align","weekday","includes","backgroundColor","DenseTable","rowsy","TableContainer","component","Paper","Table","TableHead","TableRow","colSpan","TableBody","map","row","Jan","Jan_val","Feb","Feb_val","Mar","Mar_val","Apr","Apr_val","May","May_val","Jun","Jun_val","Jul","Jul_val","Aug","Aug_val","Sep","Sep_val","Oct","Oct_val","Nov","Nov_val","Dec","Dec_val","month_config","App","props","addMilestones","milestone","setState","milestones","state","forEach","index","dat","rows","getDate","getMonth","curDay","cells","curMonth","dateEntry","toLocaleDateString","currentEntry","parse","this","axios","get","res","data","alert","btnPush","Object","keys","key","cur","idx","param","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b03c0d0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"./index.css\";\r\nimport DataGrid from 'react-data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { spacing } from '@material-ui/system';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nconst baseAPI = '/api/data';\r\nvar openDialog = null;\r\nconst year = 2021;\r\n \r\n\r\nvar dialogAction = null;\r\n\r\n function FormDialog({obj:addMilestone}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const desc = React.useRef(\"\");\r\n  const desc_long = React.useRef(\"\");\r\n  const date = React.useRef(new Date());\r\n  var type = \"\";\r\n  const formattedDate = React.useRef(\"2022-01-01\")\r\n  const addM = addMilestone;\r\n\r\n  const setTypeVal = (val)=>{\r\n    type = val\r\n  }\r\n    \r\n\r\n  const handleClickOpen = (year, month, day) => {\r\n    day = parseInt(day);\r\n    date.current = new Date(year,month,day);\r\n    var yFixed = \"\"+year;\r\n    var mFixed = (month < 10 ? \"0\"+month:\"\"+month); \r\n    var dFixed = (day < 10? \"0\"+day:\"\"+day);\r\n   formattedDate.current = yFixed+\"-\"+mFixed+\"-\"+dFixed;\r\n   console.log(\"DAtum geparsed: \"+yFixed+\"-\"+mFixed+\"-\"+dFixed);\r\n    setOpen(true);\r\n  };\r\n\r\n  openDialog = handleClickOpen;\r\n  const handleCancel = () => {setOpen(false);}\r\n\r\n  const handleClose = (addMilestone) => {\r\n    setOpen(false);\r\n    console.log(\"dialog hat jetzt: \"+type)\r\n  \r\n\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        var hero= {desc:desc.current.value,desc_long : desc_long.current.value, date :date.current.value, type:type}\r\n        addM(hero);\r\n        \r\n        fetch(`${baseAPI}/hero`, {\r\n          method: 'PUT',\r\n          body: JSON.stringify(hero),\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n          .then(result => result.json())\r\n          .then(json => resolve(json))\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    \r\n    }\r\n\r\n  dialogAction = handleClickOpen;\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Dialog open={open} onClose={(addMilestone)=>{handleClose(addMilestone)}} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Eintrag bearbeiten.\r\n          </DialogContentText>\r\n          <TextField\r\n              id=\"date\"\r\n              label=\"Datum\"\r\n              type=\"date\"\r\n              defaultValue={formattedDate.current}\r\n              inputRef={date}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n           />\r\n          \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"desc\"\r\n            label=\"Beschreibung\"\r\n            inputRef={desc}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n\r\n       <SimpleSelect callback={setTypeVal}/>\r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={(addMilestone)=>{handleClose(addMilestone)}} color=\"primary\">\r\n            Eintragen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n \r\n\r\nfunction SimpleSelect({callback:setParentType}) {\r\n  const classes = useStyles();\r\n  const [type, setType] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    console.log(\"setze jetzt auf:\"+event.target.value)\r\n    setParentType( event.target.value);\r\n  };\r\n\r\nreturn(\r\n  <FormControl variant=\"filled\" className={classes.formControl} inputRef={type}>\r\n  <InputLabel id=\"demo-simple-select-filled-label\">Typ</InputLabel>\r\n  <Select\r\n    labelId=\"demo-simple-select-filled-label\"\r\n    id=\"demo-simple-select-filled\"\r\n    value={type}\r\n    onChange={handleChange}\r\n  >\r\n    <MenuItem value=\"\">\r\n      <em>None</em>\r\n    </MenuItem>\r\n    <MenuItem value=\"Marketing\">Marketing</MenuItem>\r\n    <MenuItem value=\"SCM\">SCM</MenuItem>\r\n    <MenuItem value=\"Other\">Other</MenuItem>\r\n  </Select>\r\n</FormControl>\r\n\r\n)\r\n\r\n}\r\n\r\nconst theme = {\r\n  spacing: 0,\r\n  padding: 0,\r\n}\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction cellSet(day, month, year, val) {\r\n  var chips = [];\r\n\r\n  if(val != null){\r\n    for(var i=0;i<val.length;i++){\r\n      chips.push(<Chip  p={0} color=\"primary\" size=\"small\" label={val[i]}/>)\r\n    }\r\n  }\r\n  return [\r\n\r\n    <TableCell style={cellStyle(day)}  p={0} align=\"left\"  onClick={()=>{dialogAction(year,month,day)}}>\r\n    {day}\r\n    </TableCell>,\r\n\r\n      <TableCell style={cellStyle(day)}  p={0} align=\"left\" onClick={()=>{dialogAction(year,month,day)}}>\r\n    {chips}\r\n    </TableCell>\r\n  ]\r\n}\r\n\r\n\r\nfunction cellStyle(weekday){\r\n  return (weekday.includes(\"Sa\") || weekday.includes(\"So\")) ? {backgroundColor: 'lightgrey'}:{}\r\n}\r\n\r\nfunction DenseTable({value:rowsy}) {\r\n  const classes = useStyles();\r\n  const colSpanTop = 2;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow p={0} >\r\n            <TableCell p={0} colSpan={colSpanTop}>Januar</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>Februar</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>März</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>April</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>Mai</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>Juni</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>Juli</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>August</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>September</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>Oktober</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>November</TableCell>\r\n            <TableCell p={0} colSpan={colSpanTop}>Dezember</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody p={0} >\r\n          {rowsy.map((row) => (\r\n            <TableRow p={0} key={row.id}>\r\n             {cellSet(row.Jan,1,year,row.Jan_val)}\r\n             {cellSet(row.Feb,2,year,row.Feb_val)}\r\n             {cellSet(row.Mar,3, year,row.Mar_val)}\r\n             {cellSet(row.Apr,4,year, row.Apr_val)}\r\n             {cellSet(row.May,5,year,row.May_val)}\r\n             {cellSet(row.Jun,6,year,row.Jun_val)}\r\n             {cellSet(row.Jul,7,year,row.Jul_val)}\r\n             {cellSet(row.Aug,8,year,row.Aug_val)}\r\n             {cellSet(row.Sep,9,year,row.Sep_val)}\r\n             {cellSet(row.Oct,10,year,row.Oct_val)}\r\n             {cellSet(row.Nov,11,year,row.Nov_val)}\r\n             {cellSet(row.Dec,12,year,row.Dec_val)}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\nconst month_config = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\", \r\n  \"May\", \r\n  \"Jun\", \r\n  \"Jul\", \r\n  \"Aug\", \r\n  \"Sep\", \r\n  \"Oct\", \r\n  \"Nov\", \r\n  \"Dec\"\r\n];\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var startDate = new Date(2021, 0, 1);\r\n    var endDate = new Date(2021, 11, 31);\r\n    var daysOfYear = [];\r\n    const maxDaysInMonth = 31;\r\n    const year = 2021;\r\n\r\n    // cycle months, start new column for each month\r\n   \r\n  \r\n    var rows = [];\r\n    \r\n    var editedValue = \"kein wert\";\r\n    \r\n    //cycle through days, add new row for each day and empty strings until 31\r\n    for(var curDay = 1; curDay <= maxDaysInMonth; curDay ++){\r\n      var cells = [];\r\n      cells.push(curDay);\r\n      for (var curMonth = 0; curMonth < 12; curMonth ++) {\r\n          //get days in the month\r\n          var daysInMonth = new Date(year, curMonth+1, 0).getDate();\r\n          var value = \"\";\r\n        \r\n    \r\n        if (curDay <= daysInMonth){\r\n          //add date\r\n          var dateEntry = new Date(year,curMonth,curDay);\r\n          const options1 = { weekday: 'short'};\r\n          const options2 = { day: 'numeric' };\r\n          value = \"\"+dateEntry.toLocaleDateString('de-DE', options2)+\" \"+dateEntry.toLocaleDateString('de-DE', options1); \r\n        }else{\r\n          //add empty string  \r\n        }\r\n        \r\n        cells.push(value);\r\n      }\r\n      rows.push( { \r\n        id: cells[0], \r\n        Jan:cells[1], \r\n        Feb: cells[2], \r\n        Mar: cells[3], \r\n        Apr: cells[4], \r\n        May: cells[5], \r\n        Jun: cells[6], \r\n        Jul: cells[7], \r\n        Aug: cells[8], \r\n        Sep: cells[9], \r\n        Oct: cells[10], \r\n        Nov: cells[11], \r\n        Dec: cells[12],\r\n        Jan_val: [], \r\n        Feb_val: [], \r\n        Mar_val: [], \r\n        Apr_val: [], \r\n        May_val: [], \r\n        Jun_val: [], \r\n        Jul_val: [], \r\n        Aug_val: [], \r\n        Sep_val: [], \r\n        Oct_val: [], \r\n        Nov_val: [], \r\n        Dec_val: [],\r\n      })\r\n    }\r\n\r\n    /*for (var d = startDate; d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        daysOfYear.push(new Date(d));\r\n    }*/\r\n\r\n   \r\n    /*for (var r = 0; r < daysOfYear.length;r++) {\r\n      rows.push( { id: r, title: daysOfYear[r].toLocaleDateString() })\r\n      \r\n    }*/\r\n  \r\n\r\n    this.state = {\r\n      milestones: [],\r\n      rows : rows,\r\n      currentEntry : {\r\n        date: null,\r\n        desc: \"test test\", //creating a refernce for TextField Component\r\n        desc_long: \"long\"\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  btnPush (){\r\n    var rowCpy =  JSON.parse(JSON.stringify(this.state.rows));\r\n    //rowCpy[1][\"Jan\"] = \"Got ya\"; no copy needed\r\n    this.state.rows[1][\"Jan\"] = \"Got ya\";\r\n    this.setState({rows:this.state.rows});\r\n  }\r\n\r\n  \r\n   componentDidMount() {\r\n    console.log(\"componentDidMount success\")\r\n    axios.get('/api/data')\r\n      .then(res => {\r\n        console.log(\"data recieved: \", res.data);\r\n        this.addMilestones(res.data);\r\n        console.log(\"changed after load: \"+this.state.rows)\r\n      this.setState({rows:this.state.rows});\r\n      })\r\n      .catch(alert);\r\n      \r\n  }\r\n\r\n   addMilestones = (milestone) => {\r\n    this.setState({ milestones: milestone });\r\n    this.state.milestones.forEach(\r\n      (value, index)=>{\r\n      var dat = new Date(value[\"date\"])\r\n      this.state.rows[dat.getDate()][month_config[dat.getMonth()]+\"_val\"].push(value[\"desc\"])\r\n      console.log(\"gefunden, tag: \"+dat.getDate()+\" Monat: \"+dat.getMonth()+\" desc: \"+value[\"desc\"])\r\n    })\r\n  }\r\n\r\n    addMilestone = (milestone) => {\r\n      this.state.milestones.push(milestone);\r\n      this.setState({ milestones: this.state.milestones });\r\n      var dat = new Date(milestone[\"date\"])\r\n      this.state.rows[dat.getDate()][month_config[dat.getMonth()]+\"_val\"].push(milestone[\"desc\"])\r\n      console.log(\"hinzugefügt, tag: \"+dat.getDate()+\" Monat: \"+dat.getMonth()+\" desc: \"+milestone[\"desc\"])\r\n\r\n      //this.addMilestones(this.state.milestones);\r\n  }\r\n  \r\n\r\n  render() {\r\n    console.log(\"render milestones: \", this.state.milestones)\r\n    return (\r\n      <div>\r\n        <Button onClick={()=>{this.btnPush()}}> push me </Button>\r\n    \r\n       <DenseTable value={this.state.rows}/>\r\n      \r\n        <ul>\r\n          {\r\n          \r\n\r\n              Object.keys(this.state.milestones).map((key, i) => (\r\n                Object.keys(this.state.milestones[key]).map((cur, idx) => (\r\n                  <li>{cur} - {this.state.milestones[key][cur]} </li>\r\n                ))\r\n              ))\r\n\r\n    \r\n                }\r\n        </ul>\r\n        \r\n       <FormDialog obj={(param)=>{this.addMilestone(param)}}/>\r\n\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}