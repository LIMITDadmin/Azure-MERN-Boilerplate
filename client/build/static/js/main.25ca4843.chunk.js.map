{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","table","TableCellSizeSmall","padding","fontsize","textalign","fontweight","lineheight","borderbottom","letterspacing","verticalalign","baseAPI","year","dialogAction","FormDialog","addMilestone","obj","change","React","useState","open","setOpen","desc","useRef","desc_long","date","Date","type","formattedDate","addM","handleClickOpen","month","day","parseInt","current","yFixed","mFixed","dFixed","console","log","handleCancel","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","label","defaultValue","inputRef","InputLabelProps","shrink","autoFocus","fullWidth","SimpleSelect","callback","val","DialogActions","Button","onClick","color","Promise","resolve","reject","hero","value","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","data","catch","err","setParentType","classes","setType","FormControl","variant","className","InputLabel","Select","labelId","onChange","event","target","MenuItem","CellSet","deleteMilestone","chips","i","length","push","Chip","p","size","onDelete","TableCell","style","cellStyle","align","weekday","isContentCol","includes","backgroundColor","whiteSpace","DenseTable","rowsy","delete","TableContainer","component","Paper","Table","TableHead","TableRow","width","colSpan","TableBody","map","row","Jan","Jan_val","Feb","Feb_val","Mar","Mar_val","Apr","Apr_val","May","May_val","Jun","Jun_val","Jul","Jul_val","Aug","Aug_val","Sep","Sep_val","Oct","Oct_val","Nov","Nov_val","Dec","Dec_val","month_config","App","props","addMilestones","milestone","isClearContent","rowSet","createRows","state","rows","forEach","index","dat","getDate","getMonth","setState","milestones","_id","filteredMilestones","filter","element","changeMilestone","currentEntry","curDay","cells","curMonth","dateEntry","toLocaleDateString","parse","this","axios","get","res","alert","btnPush","param","Object","keys","key","cur","idx","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+aAmCMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWN,EAAMG,QAAQ,IAE3BI,MAAO,CACLH,SAAU,KAEZI,mBAAoB,CAClBC,QAAQ,kBACRC,SAAU,WACVC,UAAW,OACVC,WAAY,IACbC,WAAY,KACZC,aAAc,mCACdC,cAAe,YACfC,cAAe,eAIbC,EAAU,YAEVC,EAAO,KAGTC,EAAe,KAElB,SAASC,EAAT,GAAiE,IAAxCC,EAAuC,EAA3CC,IACpB,GAD+D,EAAzBC,OACdC,IAAMC,UAAS,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAOJ,IAAMK,OAAO,IACpBC,EAAYN,IAAMK,OAAO,IACzBE,EAAOP,IAAMK,OAAO,IAAIG,MAC1BC,EAAO,GACLC,EAAgBV,IAAMK,OAAO,cAC7BM,EAAOd,EAOPe,EAAkB,SAAClB,EAAMmB,EAAOC,GACpCA,EAAMC,SAASD,GACfP,EAAKS,QAAU,IAAIR,KAAKd,EAAKmB,EAAMC,GACnC,IAAIG,EAAS,GAAGvB,EACZwB,EAAUL,EAAQ,GAAK,IAAIA,EAAM,GAAGA,EACpCM,EAAUL,EAAM,GAAI,IAAIA,EAAI,GAAGA,EACpCJ,EAAcM,QAAUC,EAAO,IAAIC,EAAO,IAAIC,EAC9CC,QAAQC,IAAI,mBAAmBJ,EAAO,IAAIC,EAAO,IAAIC,GACpDhB,GAAQ,IAGGS,EACb,IAAMU,EAAe,WAAOnB,GAAQ,IA8CpC,OAFAR,EAAeiB,EAGb,8BAEE,eAACW,EAAA,EAAD,CAAQrB,KAAMA,EAAMsB,QAASF,EAAc,kBAAgB,oBAA3D,UACE,cAACG,EAAA,EAAD,CAAaC,GAAG,oBAAhB,uBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,kCAGA,cAACC,EAAA,EAAD,CACIH,GAAG,OACHI,MAAM,QACNrB,KAAK,OACLsB,aAAcrB,EAAcM,QAC5BgB,SAAUzB,EACV0B,gBAAiB,CACfC,QAAQ,KAId,cAACL,EAAA,EAAD,CACEM,WAAS,EACTzD,OAAO,QACPgD,GAAG,OACHI,MAAM,eACNE,SAAU5B,EACVK,KAAK,OACL2B,WAAS,IAGd,cAACC,EAAD,CAAcC,SA5FA,SAACC,GAClB9B,EAAO8B,QA8FH,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAASpB,EAAcqB,MAAM,UAArC,oBAGA,cAACF,EAAA,EAAD,CAAQC,QAAS,SAAC7C,GAhFxBM,GAAQ,GACRiB,QAAQC,IAAI,qBAAqBZ,GAIxB,IAAImC,SAAQ,SAACC,EAASC,GAE3B,IAAIC,EAAM,CAAC3C,KAAKA,EAAKY,QAAQgC,MAAM1C,UAAYA,EAAUU,QAAQgC,MAAOzC,KAAMA,EAAKS,QAAQgC,MAAOvC,KAAKA,GACvGE,EAAKoC,GAELE,MAAM,GAAD,OAAIxD,EAAJ,SAAoB,CACvByD,OAAQ,MACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIvC,QAAQC,IAAI,2BAA2BsC,EAAI,eACxDC,OAAM,SAAAC,GACLf,EAAOe,UA2DuDlB,MAAM,UAApE,+BAUV,SAASN,EAAT,GAAiD,IAAjByB,EAAgB,EAAzBxB,SACfyB,EAAUzF,IAChB,EAAwB0B,IAAMC,SAAS,IAAvC,mBAAOQ,EAAP,KAAauD,EAAb,KAQF,OACE,eAACC,EAAA,EAAD,CAAaC,QAAQ,SAASC,UAAWJ,EAAQtF,YAAauD,SAAUvB,EAAxE,UACA,cAAC2D,EAAA,EAAD,CAAY1C,GAAG,kCAAf,iBACA,eAAC2C,EAAA,EAAD,CACEC,QAAQ,kCACR5C,GAAG,4BACHsB,MAAOvC,EACP8D,SAbmB,SAACC,GACpBR,EAAQQ,EAAMC,OAAOzB,OACrB5B,QAAQC,IAAI,mBAAmBmD,EAAMC,OAAOzB,OAC5Cc,EAAeU,EAAMC,OAAOzB,QAM9B,UAME,cAAC0B,EAAA,EAAD,CAAU1B,MAAM,GAAhB,SACE,wCAEF,cAAC0B,EAAA,EAAD,CAAU1B,MAAM,YAAhB,uBACA,cAAC0B,EAAA,EAAD,CAAU1B,MAAM,MAAhB,iBACA,cAAC0B,EAAA,EAAD,CAAU1B,MAAM,QAAhB,yBAsBJ,SAAS2B,EAAQ7D,EAAKD,EAAOnB,EAAM6C,EAAKqC,GACtC,IAAIC,EAAQ,GACNd,EAAUzF,IAChB,GAAU,MAAPiE,EACD,IAAI,IAAIuC,EAAE,EAAEA,EAAEvC,EAAIwC,OAAOD,IAAI,CAC3B,IAAIpD,EAAKa,EAAIuC,GAAJ,IACTD,EAAMG,KAAK,cAACC,EAAA,EAAD,CAAOC,EAAG,EAAGvC,MAAM,UAAUwC,KAAK,QAAQrD,MAAOS,EAAIuC,GAAJ,KAAiBM,SAAU,kBAAIR,EAAgBlD,OAG/G,MAAO,CAEL,cAAC2D,EAAA,EAAD,CAAWlB,UAAYJ,EAAQ/E,mBAAoBsG,MAAOC,EAAUzE,GAAI,GAASoE,EAAG,EAAGM,MAAM,OAAQ9C,QAAS,WAAK/C,EAAaD,EAAKmB,EAAMC,IAA3I,SACCA,IAGC,cAACuE,EAAA,EAAD,CAAWlB,UAAWJ,EAAQ/E,mBAAoBsG,MAAOC,EAAUzE,GAAI,GAAQoE,EAAG,EAAGM,MAAM,OAAO9C,QAAS,WAAK/C,EAAaD,EAAKmB,EAAMC,IAAxI,SACD+D,KAML,SAASU,EAAUE,EAASC,GAC1B,OAAQD,EAAQE,SAAS,OAASF,EAAQE,SAAS,MAAS,CAACC,gBAAiB,YAAaC,WAAaH,EAAe,SAAU,UAAW,CAACG,WAAaH,EAAe,SAAU,UAGrL,SAASI,EAAT,GAA4D,IAAjCC,EAAgC,EAAtC/C,MAAoB4B,EAAkB,EAAzBoB,OAChB1H,IAGhB,OACE,cAAC2H,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOjB,KAAK,QAAQ,aAAW,kBAA/B,UACE,cAACkB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAUpB,EAAG,EAAb,UACE,cAACG,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAQC,QAPhC,EAOT,oBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAR/B,EAQT,qBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAT/B,EAST,qBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAV/B,EAUT,mBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAX/B,EAWT,iBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAZ/B,EAYT,kBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAb/B,EAaT,kBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAd/B,EAcT,oBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAf/B,EAeT,uBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAhB/B,EAgBT,qBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAjB/B,EAiBT,sBACA,cAACnB,EAAA,EAAD,CAAWH,EAAG,EAAII,MAAO,CAACiB,MAAO,MAAOC,QAlB/B,EAkBT,2BAGJ,cAACC,EAAA,EAAD,CAAWvB,EAAG,EAAd,SACGa,EAAMW,KAAI,SAACC,GAAD,OACT,eAACL,EAAA,EAAD,CAAUpB,EAAG,EAAb,UACEP,EAAQgC,EAAIC,IAAI,EAAElH,EAAKiH,EAAIE,QAAQjC,GACnCD,EAAQgC,EAAIG,IAAI,EAAEpH,EAAKiH,EAAII,QAAQnC,GACnCD,EAAQgC,EAAIK,IAAI,EAAGtH,EAAKiH,EAAIM,QAAQrC,GACpCD,EAAQgC,EAAIO,IAAI,EAAExH,EAAMiH,EAAIQ,QAAQvC,GACpCD,EAAQgC,EAAIS,IAAI,EAAE1H,EAAKiH,EAAIU,QAAQzC,GACnCD,EAAQgC,EAAIW,IAAI,EAAE5H,EAAKiH,EAAIY,QAAQ3C,GACnCD,EAAQgC,EAAIa,IAAI,EAAE9H,EAAKiH,EAAIc,QAAQ7C,GACnCD,EAAQgC,EAAIe,IAAI,EAAEhI,EAAKiH,EAAIgB,QAAQ/C,GACnCD,EAAQgC,EAAIiB,IAAI,EAAElI,EAAKiH,EAAIkB,QAAQjD,GACnCD,EAAQgC,EAAImB,IAAI,GAAGpI,EAAKiH,EAAIoB,QAAQnD,GACpCD,EAAQgC,EAAIqB,IAAI,GAAGtI,EAAKiH,EAAIsB,QAAQrD,GACpCD,EAAQgC,EAAIuB,IAAI,GAAGxI,EAAKiH,EAAIwB,QAAQvD,KAZjB+B,EAAIjF,cAsBrC,IAAM0G,EAAe,CACnB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAsNaC,E,kDA/Mb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAsHPC,cAAgB,SAACC,GAAuC,IAA5BC,EAA2B,wDAElDC,EAAS,GAEXA,EADED,EACO,EAAKE,aAEL,EAAKC,MAAMC,KAGtBL,EAAUM,SACR,SAAC9F,EAAO+F,GACR,IAAIC,EAAM,IAAIxI,KAAKwC,EAAK,MACxB0F,EAAOM,EAAIC,WAAWb,EAAaY,EAAIE,YAAY,QAAQlE,KAAKhC,GAChE5B,QAAQC,IAAI,kBAAkB2H,EAAIC,UAAU,WAAWD,EAAIE,WAAW,UAAUlG,EAAK,KAAS,OAAOA,EAAK,QAE5G,EAAKmG,SAAS,CAAEC,WAAYZ,EAAWK,KAAKH,KAtI3B,EAyIjB7I,aAAe,SAAC2I,GACd,EAAKI,MAAMQ,WAAWpE,KAAKwD,GAC3B,EAAKW,SAAS,CAAEC,WAAY,EAAKR,MAAMQ,aACvC,IAAIJ,EAAM,IAAIxI,KAAKgI,EAAS,MAC5B,EAAKI,MAAMC,KAAKG,EAAIC,WAAWb,EAAaY,EAAIE,YAAY,QAAQlE,KAAK,CAACqE,IAAIb,EAAS,IAASpI,KAAKoI,EAAS,OAC9GpH,QAAQC,IAAI,wBAAqB2H,EAAIC,UAAU,WAAWD,EAAIE,WAAW,UAAUV,EAAS,OA9I7E,EAmJnB5D,gBAAkB,SAAClD,GAEjBN,QAAQC,IAAI,iBAAiBK,EAAG,kBAAkB,EAAKkH,MAAMQ,WAAWrE,QACxE,IAAIuE,EAAsB,EAAKV,MAAMQ,WAAWG,QAAO,SAAAC,GAAO,OAAIA,EAAQH,KAAO3H,KAEjF,OADA,EAAK6G,cAAce,GAAmB,GAC/B,IAAI1G,SAAQ,SAACC,EAASC,GAC3BG,MAAM,GAAD,OAAIxD,EAAJ,iBAAoBiC,GAAM,CAAEwB,OAAQ,WACtCM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIb,EAAQa,MACrBE,OAAM,SAAAC,GACLf,EAAOe,UA7JI,EA+KrB4F,gBAAkB,SAAC/H,KA5KC,IAAIlB,KAAK,KAAM,EAAG,GACpB,IAAIA,KAAK,KAAM,GAAI,IADjC,IAQIqI,EAAO,EAAKF,aAXC,OAwBjB,EAAKC,MAAQ,CACXQ,WAAY,GACZP,KAAOA,EACPa,aAAe,CACbnJ,KAAM,KACNH,KAAM,YACNE,UAAW,SA9BE,E,8CAoCnB,WAQE,IAPA,IAEIuI,EAAO,GAKFc,EAAS,EAAGA,GAPE,GAOwBA,IAAU,CACvD,IAAIC,EAAQ,GACZA,EAAM5E,KAAK2E,GACX,IAAK,IAAIE,EAAW,EAAGA,EAAW,GAAIA,IAAY,CAEhD,IACI7G,EAAQ,GAGZ,GAAI2G,GAJc,IAAInJ,KAXb,KAWwBqJ,EAAW,EAAG,GAAGZ,UAIvB,CAEzB,IAAIa,EAAY,IAAItJ,KAjBb,KAiBwBqJ,EAAUF,GAGzC3G,EAAa8G,EAAUC,mBAAmB,QADzB,CAAEjJ,IAAK,YACuC,IAAMgJ,EAAUC,mBAAmB,QAFjF,CAAEtE,QAAS,UAO9BmE,EAAM5E,KAAKhC,GAEb6F,EAAK7D,KAAK,CACRtD,GAAIkI,EAAM,GACVhD,IAAKgD,EAAM,GACX9C,IAAK8C,EAAM,GACX5C,IAAK4C,EAAM,GACX1C,IAAK0C,EAAM,GACXxC,IAAKwC,EAAM,GACXtC,IAAKsC,EAAM,GACXpC,IAAKoC,EAAM,GACXlC,IAAKkC,EAAM,GACXhC,IAAKgC,EAAM,GACX9B,IAAK8B,EAAM,IACX5B,IAAK4B,EAAM,IACX1B,IAAK0B,EAAM,IACX/C,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,GACTE,QAAS,KAGb,OAAOU,I,qBAGT,WACgBzF,KAAK4G,MAAM5G,KAAKC,UAAU4G,KAAKrB,MAAMC,OAEnDoB,KAAKrB,MAAMC,KAAK,GAAhB,IAA4B,SAC5BoB,KAAKd,SAAS,CAACN,KAAKoB,KAAKrB,MAAMC,S,+BAIhC,WAAqB,IAAD,OACnBzH,QAAQC,IAAI,6BACZ6I,IAAMC,IAAI,aACP3G,MAAK,SAAA4G,GACJhJ,QAAQC,IAAI,kBAAmB+I,EAAIzG,MACnC,EAAK4E,cAAc6B,EAAIzG,MACvBvC,QAAQC,IAAI,uBAAuB,EAAKuH,MAAMC,MAChD,EAAKM,SAAS,CAACN,KAAK,EAAKD,MAAMC,UAE9BjF,MAAMyG,S,oBAiEX,WAAU,IAAD,OAEP,OADAjJ,QAAQC,IAAI,sBAAuB4I,KAAKrB,MAAMQ,YAE5C,gCACE,cAAC3G,EAAA,EAAD,CAAQC,QAAS,WAAK,EAAK4H,WAA3B,uBAED,cAACxE,EAAD,CAAY9C,MAAOiH,KAAKrB,MAAMC,KAAM7C,OAAQ,SAACuE,GAAS,EAAK3F,gBAAgB2F,MAE1E,6BAIMC,OAAOC,KAAKR,KAAKrB,MAAMQ,YAAY1C,KAAI,SAACgE,EAAK5F,GAAN,OACrC0F,OAAOC,KAAK,EAAK7B,MAAMQ,WAAWsB,IAAMhE,KAAI,SAACiE,EAAKC,GAAN,OAC1C,+BAAKD,EAAL,MAAa,EAAK/B,MAAMQ,WAAWsB,GAAKC,GAAxC,eAQX,cAAC/K,EAAD,CAAYE,IAAK,SAACyK,GAAS,EAAK1K,aAAa0K,IAASxK,OAAQ,SAACwK,GAAS,EAAKd,gBAAgBc,a,GA5MlFvK,IAAM6K,WClTJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjI,MAAK,SAAAkI,GACjCA,EAAaC,iB","file":"static/js/main.25ca4843.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"./index.css\";\r\nimport DataGrid from 'react-data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { spacing } from '@material-ui/system';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  TableCellSizeSmall: {\r\n    padding:\"3px 1px 3px 1px\",\r\n    fontsize: \"0.875rem\",\r\n    textalign: \"left\",\r\n     fontweight: 400,\r\n    lineheight: 1.43,\r\n    borderbottom: \"1px solid rgba(224, 224, 224, 1)\",\r\n    letterspacing: \"0.01071em\",\r\n    verticalalign: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst baseAPI = '/api/data';\r\nvar openDialog = null;\r\nconst year = 2021;\r\n \r\n\r\nvar dialogAction = null;\r\n\r\n function FormDialog({obj:addMilestone, change:changeMilestone}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const desc = React.useRef(\"\");\r\n  const desc_long = React.useRef(\"\");\r\n  const date = React.useRef(new Date());\r\n  var type = \"\";\r\n  const formattedDate = React.useRef(\"2022-01-01\")\r\n  const addM = addMilestone;\r\n  const chM = changeMilestone;\r\n\r\n  const setTypeVal = (val)=>{\r\n    type = val\r\n  }\r\n\r\n  const handleClickOpen = (year, month, day) => {\r\n    day = parseInt(day);\r\n    date.current = new Date(year,month,day);\r\n    var yFixed = \"\"+year;\r\n    var mFixed = (month < 10 ? \"0\"+month:\"\"+month); \r\n    var dFixed = (day < 10? \"0\"+day:\"\"+day);\r\n   formattedDate.current = yFixed+\"-\"+mFixed+\"-\"+dFixed;\r\n   console.log(\"DAtum geparsed: \"+yFixed+\"-\"+mFixed+\"-\"+dFixed);\r\n    setOpen(true);\r\n  };\r\n\r\n  openDialog = handleClickOpen;\r\n  const handleCancel = () => {setOpen(false);}\r\n\r\n  const handleClose = (addMilestone) => {\r\n    setOpen(false);\r\n    console.log(\"dialog hat jetzt: \"+type)\r\n  \r\n\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        var hero= {desc:desc.current.value,desc_long : desc_long.current.value, date :date.current.value, type:type}\r\n        addM(hero);\r\n        \r\n        fetch(`${baseAPI}/hero`, {\r\n          method: 'PUT',\r\n          body: JSON.stringify(hero),\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => console.log(\"DB Eintrag erfolgt, ID: \"+data[\"insertedId\"]))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n         \r\n            /*\r\n            {\r\n              \"result\":{\"n\":1,\"ok\":1},\r\n              \"connection\":{\"id\":1,\"host\":\"cosmo-limitd.mongo.cosmos.azure.com\",\"port\":10255},\r\n              \"ops\":[{\"type\":\"\",\"date\":\"2021-07-09\",\"desc\":\"kjkjkj\",\"_id\":\"613fc9bbcc532698343af1a1\"}],\r\n              \"insertedCount\":1,\r\n              \"insertedId\":\"613fc9bbcc532698343af1a1\",\r\n              \"n\":1,\r\n              \"ok\":1\r\n            }*/\r\n          \r\n          \r\n          \r\n      });\r\n    \r\n    }\r\n\r\n  dialogAction = handleClickOpen;\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Eintrag bearbeiten.\r\n          </DialogContentText>\r\n          <TextField\r\n              id=\"date\"\r\n              label=\"Datum\"\r\n              type=\"date\"\r\n              defaultValue={formattedDate.current}\r\n              inputRef={date}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n           />\r\n          \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"desc\"\r\n            label=\"Beschreibung\"\r\n            inputRef={desc}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n\r\n       <SimpleSelect callback={setTypeVal}/>\r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={(addMilestone)=>{handleClose(addMilestone)}} color=\"primary\">\r\n            Eintragen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n \r\n\r\nfunction SimpleSelect({callback:setParentType}) {\r\n  const classes = useStyles();\r\n  const [type, setType] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    console.log(\"setze jetzt auf:\"+event.target.value)\r\n    setParentType( event.target.value);\r\n  };\r\n\r\nreturn(\r\n  <FormControl variant=\"filled\" className={classes.formControl} inputRef={type}>\r\n  <InputLabel id=\"demo-simple-select-filled-label\">Typ</InputLabel>\r\n  <Select\r\n    labelId=\"demo-simple-select-filled-label\"\r\n    id=\"demo-simple-select-filled\"\r\n    value={type}\r\n    onChange={handleChange}\r\n  >\r\n    <MenuItem value=\"\">\r\n      <em>None</em>\r\n    </MenuItem>\r\n    <MenuItem value=\"Marketing\">Marketing</MenuItem>\r\n    <MenuItem value=\"SCM\">SCM</MenuItem>\r\n    <MenuItem value=\"Other\">Other</MenuItem>\r\n  </Select>\r\n</FormControl>\r\n\r\n)\r\n\r\n}\r\n\r\nconst theme = {\r\n  spacing: 0,\r\n  padding: 0,\r\n}\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction handleDelete(id){\r\n  console.log(\"wrong: \"+id);\r\n\r\n}\r\n\r\nfunction CellSet(day, month, year, val, deleteMilestone) {\r\n  var chips = [];\r\n  const classes = useStyles();\r\n  if(val != null){\r\n    for(var i=0;i<val.length;i++){\r\n      var id = val[i][\"_id\"]; \r\n      chips.push(<Chip  p={0} color=\"primary\" size=\"small\" label={val[i][\"desc\"]}  onDelete={()=>deleteMilestone(id)}/>)\r\n    }\r\n  }\r\n  return [\r\n\r\n    <TableCell className={ classes.TableCellSizeSmall} style={cellStyle(day,false)}  p={0} align=\"left\"  onClick={()=>{dialogAction(year,month,day)}}>\r\n    {day}\r\n    </TableCell>,\r\n\r\n      <TableCell className={classes.TableCellSizeSmall} style={cellStyle(day,true)}  p={0} align=\"left\" onClick={()=>{dialogAction(year,month,day)}}>\r\n    {chips}\r\n    </TableCell>\r\n  ]\r\n}\r\n\r\n\r\nfunction cellStyle(weekday, isContentCol){\r\n  return (weekday.includes(\"Sa\") || weekday.includes(\"So\")) ? {backgroundColor: 'lightgrey', whiteSpace: (isContentCol ? \"normal\": \"nowrap\")}:{whiteSpace: (isContentCol ? \"normal\": \"nowrap\")}\r\n}\r\n\r\nfunction DenseTable({value:rowsy, delete:deleteMilestone}) {\r\n  const classes = useStyles();\r\n  const colSpanTop = 2;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"Milestone table\">\r\n        <TableHead>\r\n          <TableRow p={0} >\r\n            <TableCell p={0}  style={{width: \"8%\"}}  colSpan={colSpanTop}>Januar</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Februar</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>März</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>April</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Mai</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Juni</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Juli</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>August</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>September</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Oktober</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>November</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Dezember</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody p={0} >\r\n          {rowsy.map((row) => (\r\n            <TableRow p={0} key={row.id}>\r\n             {CellSet(row.Jan,1,year,row.Jan_val,deleteMilestone)}\r\n             {CellSet(row.Feb,2,year,row.Feb_val,deleteMilestone)}\r\n             {CellSet(row.Mar,3, year,row.Mar_val,deleteMilestone)}\r\n             {CellSet(row.Apr,4,year, row.Apr_val,deleteMilestone)}\r\n             {CellSet(row.May,5,year,row.May_val,deleteMilestone)}\r\n             {CellSet(row.Jun,6,year,row.Jun_val,deleteMilestone)}\r\n             {CellSet(row.Jul,7,year,row.Jul_val,deleteMilestone)}\r\n             {CellSet(row.Aug,8,year,row.Aug_val,deleteMilestone)}\r\n             {CellSet(row.Sep,9,year,row.Sep_val,deleteMilestone)}\r\n             {CellSet(row.Oct,10,year,row.Oct_val,deleteMilestone)}\r\n             {CellSet(row.Nov,11,year,row.Nov_val,deleteMilestone)}\r\n             {CellSet(row.Dec,12,year,row.Dec_val,deleteMilestone)}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\nconst month_config = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\", \r\n  \"May\", \r\n  \"Jun\", \r\n  \"Jul\", \r\n  \"Aug\", \r\n  \"Sep\", \r\n  \"Oct\", \r\n  \"Nov\", \r\n  \"Dec\"\r\n];\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var startDate = new Date(2021, 0, 1);\r\n    var endDate = new Date(2021, 11, 31);\r\n    var daysOfYear = [];\r\n   \r\n\r\n    // cycle months, start new column for each month\r\n   \r\n  \r\n    var rows = this.createRows();\r\n\r\n    /*for (var d = startDate; d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        daysOfYear.push(new Date(d));\r\n    }*/\r\n\r\n   \r\n    /*for (var r = 0; r < daysOfYear.length;r++) {\r\n      rows.push( { id: r, title: daysOfYear[r].toLocaleDateString() })\r\n      \r\n    }*/\r\n  \r\n\r\n    this.state = {\r\n      milestones: [],\r\n      rows : rows,\r\n      currentEntry : {\r\n        date: null,\r\n        desc: \"test test\", //creating a refernce for TextField Component\r\n        desc_long: \"long\"\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  createRows() {\r\n    const maxDaysInMonth = 31;\r\n    const year = 2021;\r\n    var rows = [];\r\n\r\n    var editedValue = \"kein wert\";\r\n\r\n    //cycle through days, add new row for each day and empty strings until 31\r\n    for (var curDay = 1; curDay <= maxDaysInMonth; curDay++) {\r\n      var cells = [];\r\n      cells.push(curDay);\r\n      for (var curMonth = 0; curMonth < 12; curMonth++) {\r\n        //get days in the month\r\n        var daysInMonth = new Date(year, curMonth + 1, 0).getDate();\r\n        var value = \"\";\r\n\r\n\r\n        if (curDay <= daysInMonth) {\r\n          //add date\r\n          var dateEntry = new Date(year, curMonth, curDay);\r\n          const options1 = { weekday: 'short' };\r\n          const options2 = { day: 'numeric' };\r\n          value = \"\" + dateEntry.toLocaleDateString('de-DE', options2) + \" \" + dateEntry.toLocaleDateString('de-DE', options1);\r\n        } else {\r\n          //add empty string  \r\n        }\r\n\r\n        cells.push(value);\r\n      }\r\n      rows.push({\r\n        id: cells[0],\r\n        Jan: cells[1],\r\n        Feb: cells[2],\r\n        Mar: cells[3],\r\n        Apr: cells[4],\r\n        May: cells[5],\r\n        Jun: cells[6],\r\n        Jul: cells[7],\r\n        Aug: cells[8],\r\n        Sep: cells[9],\r\n        Oct: cells[10],\r\n        Nov: cells[11],\r\n        Dec: cells[12],\r\n        Jan_val: [],\r\n        Feb_val: [],\r\n        Mar_val: [],\r\n        Apr_val: [],\r\n        May_val: [],\r\n        Jun_val: [],\r\n        Jul_val: [],\r\n        Aug_val: [],\r\n        Sep_val: [],\r\n        Oct_val: [],\r\n        Nov_val: [],\r\n        Dec_val: [],\r\n      });\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  btnPush (){\r\n    var rowCpy =  JSON.parse(JSON.stringify(this.state.rows));\r\n    //rowCpy[1][\"Jan\"] = \"Got ya\"; no copy needed\r\n    this.state.rows[1][\"Jan\"] = \"Got ya\";\r\n    this.setState({rows:this.state.rows});\r\n  }\r\n\r\n  \r\n   componentDidMount() {\r\n    console.log(\"componentDidMount success\")\r\n    axios.get('/api/data')\r\n      .then(res => {\r\n        console.log(\"data recieved: \", res.data);\r\n        this.addMilestones(res.data);\r\n        console.log(\"changed after load: \"+this.state.rows)\r\n      this.setState({rows:this.state.rows});\r\n      })\r\n      .catch(alert);\r\n      \r\n  }\r\n\r\n\r\n\r\n   addMilestones = (milestone, isClearContent = false) => {\r\n    \r\n    var rowSet = []\r\n    if (isClearContent){\r\n      rowSet = this.createRows()\r\n    }else{\r\n      rowSet = this.state.rows\r\n    }\r\n    \r\n    milestone.forEach(\r\n      (value, index)=>{\r\n      var dat = new Date(value[\"date\"])\r\n      rowSet[dat.getDate()][month_config[dat.getMonth()]+\"_val\"].push(value)\r\n      console.log(\"gefunden, tag: \"+dat.getDate()+\" Monat: \"+dat.getMonth()+\" desc: \"+value[\"desc\"]+\"id: \"+value[\"_id\"])\r\n    })\r\n    this.setState({ milestones: milestone, rows:rowSet });\r\n  }\r\n\r\n    addMilestone = (milestone) => {\r\n      this.state.milestones.push(milestone);\r\n      this.setState({ milestones: this.state.milestones });\r\n      var dat = new Date(milestone[\"date\"])\r\n      this.state.rows[dat.getDate()][month_config[dat.getMonth()]+\"_val\"].push({_id:milestone[\"_id\"], desc:milestone[\"desc\"]})\r\n      console.log(\"hinzugefügt, tag: \"+dat.getDate()+\" Monat: \"+dat.getMonth()+\" desc: \"+milestone[\"desc\"])\r\n\r\n      //this.addMilestones(this.state.milestones);\r\n  }\r\n \r\n  deleteMilestone = (id) => {\r\n\r\n    console.log(\"now deleting: \"+id+\" with pointer: \"+this.state.milestones.length)\r\n    var filteredMilestones =  this.state.milestones.filter(element => element._id != id)\r\n    this.addMilestones(filteredMilestones,true);\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/hero/${id}`, { method: 'DELETE' })\r\n        .then(response => response.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n }\r\n    \r\n    //this.state.milestones.push(milestone);\r\n    //id in milestones suchen\r\n    // löschen\r\n    // update\r\n    /*this.setState({ milestones: this.state.milestones });\r\n    var dat = new Date(milestone[\"date\"])\r\n    this.state.rows[dat.getDate()][month_config[dat.getMonth()]+\"_val\"].push(milestone[\"desc\"])\r\n    console.log(\"hinzugefügt, tag: \"+dat.getDate()+\" Monat: \"+dat.getMonth()+\" desc: \"+milestone[\"desc\"])\r\n*/\r\n    //this.addMilestones(this.state.milestones);\r\n\r\n\r\nchangeMilestone = (id) => {}\r\n  \r\n\r\n  render() {\r\n    console.log(\"render milestones: \", this.state.milestones)\r\n    return (\r\n      <div>\r\n        <Button onClick={()=>{this.btnPush()}}> push me </Button>\r\n    \r\n       <DenseTable value={this.state.rows} delete={(param)=>{this.deleteMilestone(param)}} />\r\n      \r\n        <ul>\r\n          {\r\n          \r\n\r\n              Object.keys(this.state.milestones).map((key, i) => (\r\n                Object.keys(this.state.milestones[key]).map((cur, idx) => (\r\n                  <li>{cur} - {this.state.milestones[key][cur]} </li>\r\n                ))\r\n              ))\r\n\r\n    \r\n                }\r\n        </ul>\r\n        \r\n       <FormDialog obj={(param)=>{this.addMilestone(param)}} change={(param)=>{this.changeMilestone(param)}} />\r\n\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}