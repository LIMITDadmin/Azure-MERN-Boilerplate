{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Calendar","require","theme","createTheme","spacing","padding","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","formControl","margin","minWidth","selectEmpty","marginTop","table","TableCellSizeSmall","fontsize","textalign","fontweight","lineheight","borderbottom","letterspacing","verticalalign","chipColors","baseAPI","year","dialogAction","FormDialog","addMilestone","obj","change","React","useState","open","setOpen","isModify","setModify","desc","useRef","id","desc_long","date","Date","type","formattedDate","formDesc","formType","addM","handleClickOpen","month","day","value","console","log","parseInt","current","yFixed","mFixed","dFixed","handleCancel","handleClose","isUpdate","Promise","resolve","reject","hero","_id","method","fetch","body","JSON","stringify","headers","Accept","then","response","json","data","cb","doChange","catch","err","addMilestoneToDB","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","label","defaultValue","inputRef","InputLabelProps","shrink","autoFocus","fullWidth","SimpleSelect","callback","val","defaultType","DialogActions","Button","onClick","color","setParentType","typePreset","classes","setType","FormControl","variant","className","InputLabel","Select","labelId","onChange","event","target","MenuItem","CellSet","deleteMilestone","modifyMilestone","num","text","isBadge","chips","today","adjustedMonthToday","getMonth","adjustedMonthReference","refToday","getFullYear","getDate","refDate","daysBetween","diff","isToday","i","set","push","inner","doWrap","Badge","badgeContent","addBadge","Chip","p","style","backgroundColor","size","e","stopPropagation","onDelete","length","TableCell","cellStyle","align","calculateWeekNumber","includes","height","fontSize","fontStyle","float","borderRadius","zIndex","alignContent","borderRight","weekday","isContentCol","todayColor","whiteSpace","DenseTable","rowsy","delete","modify","TableContainer","component","Paper","Table","TableHead","TableRow","width","colSpan","TableBody","map","row","Jan","Jan_val","Feb","Feb_val","Mar","Mar_val","Apr","Apr_val","May","May_val","Jun","Jun_val","Jul","Jul_val","Aug","Aug_val","Sep","Sep_val","Oct","Oct_val","Nov","Nov_val","Dec","Dec_val","month_config","App","props","addRow","rowSet","dat","addMilestones","milestone","isClearContent","createRows","state","rows","forEach","index","setState","milestones","filter","filteredMilestones","element","currentEntry","curDay","cells","curMonth","dateEntry","toLocaleDateString","axios","get","res","alert","this","ThemeProvider","param","changeMilestone","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad7948b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"./index.css\";\r\nimport DataGrid from 'react-data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { spacing } from '@material-ui/system';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Badge from '@mui/material/Badge';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\n\r\nconst Calendar = require('calendar-base').Calendar;\r\nconst cal = new Calendar();\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n  spacing: 0,\r\n  padding: 0,\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: '#3f50b5',\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#dcf5fd',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },  \r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  TableCellSizeSmall: {\r\n    padding:\"3px 1px 3px 1px\",\r\n    fontsize: \"0.875rem\",\r\n    textalign: \"left\",\r\n     fontweight: 400,\r\n    lineheight: 1.43,\r\n    borderbottom: \"1px solid rgba(224, 224, 224, 1)\",\r\n    letterspacing: \"0.01071em\",\r\n    verticalalign: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst chipColors = {\"SCM\":\"#C2F3E4\",\"\":\"#eddbf9\", \"Marketing\":\"#FF9F66\",\"other\":\"#DCF5FD\"}\r\n\r\nconst baseAPI = '/api/data';\r\nvar openDialog = null;\r\nconst year = 2021;\r\n \r\n\r\nvar dialogAction = null;\r\n\r\n function FormDialog({obj:addMilestone, change:changeMilestone}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isModify, setModify] = React.useState(false);\r\n  const desc = React.useRef(\"\");\r\n  const id = React.useRef(0);\r\n  const desc_long = React.useRef(\"\");\r\n  const date = React.useRef(new Date());\r\n  var type = React.useRef(\"-\");\r\n  const formattedDate = React.useRef(\"2022-01-01\")\r\n  const formDesc = React.useRef(\"-\")\r\n  const formType = React.useRef(\"-\")\r\n  const addM = addMilestone;\r\n  const chM = changeMilestone;\r\n  const callBack = isModify ? changeMilestone : addMilestone;\r\n\r\n  const setTypeVal = (val)=>{\r\n    console.log(\"bekomme in setTypeVal: \"+val)\r\n    type.current = val\r\n\r\n  }\r\n\r\n  const handleClickOpen = (year, month, day,value=null) => {\r\n    console.log(\"------------- Soll geändert werden? \"+(value!=null?\"Ja\":\"Nein\"))\r\n    day = parseInt(day);\r\n    date.current = new Date(year,month,day);\r\n    var yFixed = \"\"+year;\r\n    var mFixed = (month < 10 ? \"0\"+month:\"\"+month); \r\n    var dFixed = (day < 10? \"0\"+day:\"\"+day);\r\n   formattedDate.current = yFixed+\"-\"+mFixed+\"-\"+dFixed;\r\n   id.current = value !== null ? value[\"_id\"]: 0;\r\n   formDesc.current = value !== null ? value[\"desc\"]: \"\";\r\n   formType.current = value !== null ? value[\"type\"]: \"\";\r\n   type.current = (value !== null ? value[\"type\"]: \"\");\r\n   console.log(\"DAtum geparsed: \"+yFixed+\"-\"+mFixed+\"-\"+dFixed+\" type: \"+type.current);\r\n   setModify(value!==null) //if value is not null, we are modifying existing milestone\r\n   setOpen(true);\r\n  };\r\n\r\n  openDialog = handleClickOpen;\r\n  const handleCancel = () => {setOpen(false);}\r\n\r\n  const handleClose = (isUpdate) => {\r\n    setOpen(false);\r\n    console.log(\"dialog hat jetzt: \"+type.current)\r\n    return addMilestoneToDB(desc, desc_long, date, type.current, addM,id.current,isUpdate);\r\n    \r\n  }\r\n\r\n  dialogAction = handleClickOpen;\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Termin {isModify?\"Ändern\":\"Eintragen\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Termin bearbeiten.\r\n          </DialogContentText>\r\n          <TextField\r\n              id=\"date\"\r\n              label=\"Datum\"\r\n              type=\"date\"\r\n              defaultValue={formattedDate.current}\r\n              inputRef={date}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n           />\r\n          \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            defaultValue={formDesc.current}\r\n            id=\"desc\"\r\n            label=\"Beschreibung\"\r\n            inputRef={desc}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n\r\n       <SimpleSelect callback={setTypeVal} defaultType={formType.current}/>\r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={()=>{handleClose(isModify)}} color=\"primary\">\r\n            {isModify?\"Ändern\":\"Eintragen\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n \r\n\r\nfunction addMilestoneToDB(desc, desc_long, date, type, addM,id=0,isUpdate=false) {\r\n\r\n  console.log(\"Jetzt ist isUpdate noch: \"+isUpdate);\r\n  return new Promise((resolve, reject) => {\r\n    var hero = { desc: desc.current.value, desc_long: desc_long.current.value, date: date.current.value, type: type };\r\n    if(isUpdate){\r\n      console.log(\"--- hier hab ich noch die ID: \"+id);\r\n      hero = {_id:id, desc: desc.current.value, desc_long: desc_long.current.value, date: date.current.value, type: type };\r\n    }\r\n    var method = isUpdate ? 'POST' : 'PUT'\r\n    fetch(`${baseAPI}/hero`, {\r\n      method: method,\r\n      body: JSON.stringify(hero),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        let cb = addM;\r\n        let doChange = isUpdate?true:false;\r\n        console.log(\"an checkpoint 2 ist es nun: \"+doChange);\r\n        let obj = { ...hero };\r\n        console.log(\"DB Eintrag erfolgt, ID: \" + data[\"ops\"]);\r\n        cb(data[\"ops\"][0],doChange); // first element of entered Values (we only enter one)\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n\r\n  });\r\n}\r\n\r\nfunction SimpleSelect({callback:setParentType,defaultType:typePreset}) {\r\n  const classes = useStyles();\r\n  const [type, setType] = React.useState(typePreset!== null?typePreset:'');\r\n  console.log(\"Simple Select aufgerufen: \"+typePreset)\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    console.log(\"setze jetzt auf:\"+event.target.value)\r\n    setParentType( event.target.value);\r\n  };\r\n\r\nreturn(\r\n  <FormControl variant=\"filled\" className={classes.formControl} inputRef={type}>\r\n  <InputLabel id=\"demo-simple-select-filled-label\">Typ</InputLabel>\r\n  <Select\r\n    labelId=\"demo-simple-select-filled-label\"\r\n    id=\"demo-simple-select-filled\"\r\n    value={type}\r\n    onChange={handleChange}\r\n  >\r\n    <MenuItem value=\"\">\r\n      <em>None</em>\r\n    </MenuItem>\r\n    <MenuItem value=\"Marketing\">Marketing</MenuItem>\r\n    <MenuItem value=\"SCM\">SCM</MenuItem>\r\n    <MenuItem value=\"Other\">Other</MenuItem>\r\n  </Select>\r\n</FormControl>\r\n\r\n)\r\n\r\n}\r\n\r\nfunction handleDelete(id){\r\n  console.log(\"wrong: \"+id);\r\n\r\n}\r\n\r\nfunction WeekBadge(num, text, isBadge){\r\n  const result = isBadge? (\r\n    <div style={{ height:\"100%\", fontSize:\"90%\", color:\"black\", fontStyle:\"bold\", float:\"right\", borderRadius:\"0px\", zIndex:\"100\", alignContent:\"center\", borderRight:\"1px solid lightgrey\"}}><div style={{alignContent:\"center\", fontSize:\"50%\"}}>KW</div>{text+\"\"+num}</div>\r\n  \r\n  ):text;\r\n  return result;\r\n}\r\n\r\nfunction addBadge (inner,daysBetween, doWrap){\r\n  return (!doWrap ? inner :  <Badge badgeContent={daysBetween} color=\"secondary\"> {inner} </Badge>)\r\n}\r\n\r\nfunction CellSet(day, month, year, val, deleteMilestone, modifyMilestone) {\r\n  var chips = [];\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const adjustedMonthToday = today.getMonth()\r\n  const adjustedMonthReference = month-1; //zero based month\r\n  const refToday = {year: today.getFullYear(), month: adjustedMonthToday, day: today.getDate()}\r\n  const refDate = {year: year, month: adjustedMonthReference, day: parseInt(day)}\r\n  const daysBetween = Calendar.diff(refDate, refToday);\r\n  const isToday = daysBetween == 0\r\n\r\n  if(val != null){\r\n    \r\n    for(var i=0;i<val.length;i++){\r\n      var id = val[i][\"_id\"]; \r\n      let set = val[i];\r\n      let color = chipColors[val[i][\"type\"]];\r\n      chips.push(\r\n        addBadge(  \r\n        <Chip  p={0} style={{backgroundColor: color}} size=\"small\" label={val[i][\"desc\"]} onClick={(e)=>{let value = set; dialogAction(year,month,day, value); console.log(\"richtig mit: \"+value._id); e.stopPropagation()}}  onDelete={()=>deleteMilestone(id)}/>\r\n        ,daysBetween , i == 0)\r\n      )\r\n    }\r\n  }\r\n\r\n  \r\n  return [\r\n\r\n    <TableCell className={ classes.TableCellSizeSmall} style={cellStyle(day,false,isToday)}  p={0} align=\"left\"  onClick={()=>{dialogAction(year,month,day)}}>\r\n      {day}\r\n    </TableCell>,\r\n\r\n      <TableCell className={classes.TableCellSizeSmall} style={cellStyle(day,true,isToday)}  p={0} align=\"left\" onClick={()=>{console.log(\"Hääääähhhh\");dialogAction(year,month,day)}}>\r\n    {chips}    { WeekBadge(Calendar.calculateWeekNumber({year: year, month: adjustedMonthReference, day: parseInt(day)}),\"\",day.includes(\"Mo\"))} \r\n    </TableCell>\r\n  ]\r\n}\r\n\r\n\r\nfunction cellStyle(weekday, isContentCol,isToday){\r\n  let todayColor = \"#bfdbf2\"\r\n  \r\n  return (weekday.includes(\"Sa\") || weekday.includes(\"So\")) ? {backgroundColor: (isToday ? todayColor : 'lightgrey'), whiteSpace: (isContentCol ? \"normal\": \"nowrap\")}:{whiteSpace: (isContentCol ? \"normal\": \"nowrap\"),  backgroundColor: isToday ? todayColor : \"\"}\r\n}\r\n\r\nfunction DenseTable({value:rowsy, delete:deleteMilestone, modify:modifyMilestone}) {\r\n  const classes = useStyles();\r\n  const colSpanTop = 2;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"Milestone table\">\r\n        <TableHead>\r\n          <TableRow p={0} >\r\n            <TableCell p={0}  style={{width: \"8%\"}}  colSpan={colSpanTop}>Januar</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Februar</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>März</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>April</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Mai</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Juni</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Juli</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>August</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>September</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Oktober</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>November</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Dezember</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody p={0} >\r\n          {rowsy.map((row) => (\r\n            <TableRow p={0} key={row.id}>\r\n             {CellSet(row.Jan,1,year,row.Jan_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Feb,2,year,row.Feb_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Mar,3, year,row.Mar_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Apr,4,year, row.Apr_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.May,5,year,row.May_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Jun,6,year,row.Jun_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Jul,7,year,row.Jul_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Aug,8,year,row.Aug_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Sep,9,year,row.Sep_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Oct,10,year,row.Oct_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Nov,11,year,row.Nov_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Dec,12,year,row.Dec_val,deleteMilestone,modifyMilestone)}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\nconst month_config = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\", \r\n  \"May\", \r\n  \"Jun\", \r\n  \"Jul\", \r\n  \"Aug\", \r\n  \"Sep\", \r\n  \"Oct\", \r\n  \"Nov\", \r\n  \"Dec\"\r\n];\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var startDate = new Date(2021, 0, 1);\r\n    var endDate = new Date(2021, 11, 31);\r\n    var daysOfYear = [];\r\n   \r\n\r\n    // cycle months, start new column for each month\r\n   \r\n  \r\n    var rows = this.createRows();\r\n  \r\n\r\n    this.state = {\r\n      milestones: [],\r\n      rows : rows,\r\n      currentEntry : {\r\n        date: null,\r\n        desc: \"test test\", //creating a refernce for TextField Component\r\n        desc_long: \"long\"\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  createRows() {\r\n    const maxDaysInMonth = 31;\r\n    const year = 2021;\r\n    var rows = [];\r\n\r\n    var editedValue = \"kein wert\";\r\n\r\n    //cycle through days, add new row for each day and empty strings until 31\r\n    for (var curDay = 1; curDay <= maxDaysInMonth; curDay++) {\r\n      var cells = [];\r\n      cells.push(curDay);\r\n      for (var curMonth = 0; curMonth < 12; curMonth++) {\r\n        //get days in the month\r\n        var daysInMonth = new Date(year, curMonth + 1, 0).getDate();\r\n        var value = \"\";\r\n\r\n\r\n        if (curDay <= daysInMonth) {\r\n          //add date\r\n          var dateEntry = new Date(year, curMonth, curDay);\r\n          const options1 = { weekday: 'short' };\r\n          const options2 = { day: 'numeric' };\r\n          value = \"\" + dateEntry.toLocaleDateString('de-DE', options2) + \" \" + dateEntry.toLocaleDateString('de-DE', options1);\r\n        } else {\r\n          //add empty string  \r\n        }\r\n\r\n        cells.push(value);\r\n      }\r\n      rows.push({\r\n        id: cells[0],\r\n        Jan: cells[1],\r\n        Feb: cells[2],\r\n        Mar: cells[3],\r\n        Apr: cells[4],\r\n        May: cells[5],\r\n        Jun: cells[6],\r\n        Jul: cells[7],\r\n        Aug: cells[8],\r\n        Sep: cells[9],\r\n        Oct: cells[10],\r\n        Nov: cells[11],\r\n        Dec: cells[12],\r\n        Jan_val: [],\r\n        Feb_val: [],\r\n        Mar_val: [],\r\n        Apr_val: [],\r\n        May_val: [],\r\n        Jun_val: [],\r\n        Jul_val: [],\r\n        Aug_val: [],\r\n        Sep_val: [],\r\n        Oct_val: [],\r\n        Nov_val: [],\r\n        Dec_val: [],\r\n      });\r\n    }\r\n    return rows;\r\n  }\r\n\r\n\r\n  \r\n   componentDidMount() {\r\n    console.log(\"componentDidMount success\")\r\n    axios.get('/api/data')\r\n      .then(res => {\r\n        console.log(\"data recieved: \", res.data);\r\n        this.addMilestones(res.data);\r\n        console.log(\"changed after load: \"+this.state.rows)\r\n      this.setState({rows:this.state.rows});\r\n      })\r\n      .catch(alert);\r\n      \r\n  }\r\n\r\n\r\n  addRow = (value, rowSet) => {\r\n    var dat = new Date(value[\"date\"])\r\n    rowSet[dat.getDate()-1][month_config[dat.getMonth()]+\"_val\"].push(value)\r\n    return rowSet;\r\n  }\r\n\r\n\r\n   addMilestones = (milestone, isClearContent = false) => {\r\n    \r\n    var rowSet = []\r\n    if (isClearContent){\r\n      rowSet = this.createRows()\r\n    }else{\r\n      rowSet = this.state.rows\r\n    }\r\n    \r\n    milestone.forEach(\r\n      (value, index)=>{\r\n        rowSet = this.addRow(value, rowSet);\r\n    })\r\n    this.setState({ milestones: milestone, rows:rowSet });\r\n  }\r\n\r\n    addMilestone = (milestone,isUpdate) => {\r\n      console.log(\"called ........................ und an checkpoint 3: \"+isUpdate)\r\n      console.log(milestone);\r\n      if(isUpdate){\r\n        this.state.milestones = this.state.milestones.filter((obj)=>{return obj[\"_id\"] !== milestone[\"_id\"]});\r\n        console.log (\"trying to remove \"+milestone[\"_id\"])\r\n      }\r\n      this.state.milestones.push(milestone);\r\n      this.addMilestones(this.state.milestones,true);\r\n  }\r\n \r\n  deleteMilestone = (id) => {\r\n\r\n    console.log(\"now deleting: \"+id+\" with pointer: \"+this.state.milestones.length)\r\n    var filteredMilestones =  this.state.milestones.filter(element => element._id != id)\r\n    this.addMilestones(filteredMilestones,true);\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/hero/${id}`, { method: 'DELETE' })\r\n        .then(response => response.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n }\r\n\r\n  \r\n\r\n  render() {\r\n    console.log(\"render milestones: \", this.state.milestones)\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <div>\r\n       <DenseTable value={this.state.rows} delete={(param)=>{this.deleteMilestone(param)}}/>\r\n       <FormDialog obj={(obj,isUpdate)=>{this.addMilestone(obj,isUpdate)}} change={(param)=>{this.changeMilestone(param)}} />\r\n\r\n      {/*\r\n        <ul>\r\n          {\r\n          \r\n\r\n              Object.keys(this.state.milestones).map((key, i) => (\r\n                Object.keys(this.state.milestones[key]).map((cur, idx) => (\r\n                  <li>{cur} - {this.state.milestones[key][cur]} </li>\r\n                ))\r\n              ))\r\n\r\n    \r\n                }\r\n        </ul>\r\n         */}\r\n  \r\n\r\n      </div> \r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}