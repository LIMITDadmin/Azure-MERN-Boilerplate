{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","table","TableCellSizeSmall","padding","fontsize","textalign","fontweight","lineheight","borderbottom","letterspacing","verticalalign","baseAPI","year","dialogAction","FormDialog","addMilestone","obj","change","mode","React","useState","open","setOpen","desc","useRef","desc_long","date","Date","type","formattedDate","formDesc","addM","handleClickOpen","month","day","value","console","log","parseInt","current","yFixed","mFixed","dFixed","handleCancel","handleClose","callback","isUpdate","Promise","resolve","reject","hero","method","fetch","body","JSON","stringify","headers","Accept","then","response","json","data","cb","catch","err","addMilestoneToDB","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","label","defaultValue","inputRef","InputLabelProps","shrink","autoFocus","fullWidth","SimpleSelect","val","DialogActions","Button","onClick","color","callBack","setParentType","classes","setType","FormControl","variant","className","InputLabel","Select","labelId","onChange","event","target","MenuItem","CellSet","deleteMilestone","modifyMilestone","chips","i","set","push","Chip","p","size","e","stopPropagation","onDelete","length","TableCell","style","cellStyle","align","weekday","isContentCol","includes","backgroundColor","whiteSpace","DenseTable","rowsy","delete","modify","TableContainer","component","Paper","Table","TableHead","TableRow","width","colSpan","TableBody","map","row","Jan","Jan_val","Feb","Feb_val","Mar","Mar_val","Apr","Apr_val","May","May_val","Jun","Jun_val","Jul","Jul_val","Aug","Aug_val","Sep","Sep_val","Oct","Oct_val","Nov","Nov_val","Dec","Dec_val","month_config","App","props","addRow","rowSet","dat","getDate","getMonth","addMilestones","milestone","isClearContent","createRows","state","rows","forEach","index","setState","milestones","_id","filteredMilestones","filter","element","changeMilestone","currentEntry","curDay","cells","curMonth","dateEntry","toLocaleDateString","axios","get","res","alert","this","btnPush","param","Object","keys","key","cur","idx","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f77ae79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"./index.css\";\r\nimport DataGrid from 'react-data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { spacing } from '@material-ui/system';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  TableCellSizeSmall: {\r\n    padding:\"3px 1px 3px 1px\",\r\n    fontsize: \"0.875rem\",\r\n    textalign: \"left\",\r\n     fontweight: 400,\r\n    lineheight: 1.43,\r\n    borderbottom: \"1px solid rgba(224, 224, 224, 1)\",\r\n    letterspacing: \"0.01071em\",\r\n    verticalalign: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst baseAPI = '/api/data';\r\nvar openDialog = null;\r\nconst year = 2021;\r\n \r\n\r\nvar dialogAction = null;\r\n\r\n function FormDialog({obj:addMilestone, change:changeMilestone, mode:formMode}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const desc = React.useRef(\"\");\r\n  const desc_long = React.useRef(\"\");\r\n  const date = React.useRef(new Date());\r\n  var type = \"\";\r\n  const formattedDate = React.useRef(\"2022-01-01\")\r\n  const formDesc = React.useRef(\"-\")\r\n  const formType = React.useRef(\"-\")\r\n  const addM = addMilestone;\r\n  const chM = changeMilestone;\r\n  const callBack = formMode == \"update\"? changeMilestone : addMilestone;\r\n\r\n  const setTypeVal = (val)=>{\r\n    type = val\r\n  }\r\n\r\n  const handleClickOpen = (year, month, day,value=null) => {\r\n    console.log(\"------------- Soll geändert werden? \"+(value!=null?\"Ja\":\"Nein\"))\r\n    day = parseInt(day);\r\n    date.current = new Date(year,month,day);\r\n    var yFixed = \"\"+year;\r\n    var mFixed = (month < 10 ? \"0\"+month:\"\"+month); \r\n    var dFixed = (day < 10? \"0\"+day:\"\"+day);\r\n   formattedDate.current = yFixed+\"-\"+mFixed+\"-\"+dFixed;\r\n   formDesc.current = value !== null ? value[\"desc\"]:  \"\";\r\n   console.log(\"DAtum geparsed: \"+yFixed+\"-\"+mFixed+\"-\"+dFixed);\r\n    setOpen(true);\r\n  };\r\n\r\n  openDialog = handleClickOpen;\r\n  const handleCancel = () => {setOpen(false);}\r\n\r\n  const handleClose = (callback) => {\r\n    setOpen(false);\r\n    console.log(\"dialog hat jetzt: \"+type)\r\n    return addMilestoneToDB(desc, desc_long, date, type, addM);\r\n    \r\n  }\r\n\r\n  dialogAction = handleClickOpen;\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Termin Eintragen</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Termin bearbeiten.\r\n          </DialogContentText>\r\n          <TextField\r\n              id=\"date\"\r\n              label=\"Datum\"\r\n              type=\"date\"\r\n              defaultValue={formattedDate.current}\r\n              inputRef={date}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n           />\r\n          \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            defaultValue={formDesc.current}\r\n            id=\"desc\"\r\n            label=\"Beschreibung\"\r\n            inputRef={desc}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n\r\n       <SimpleSelect callback={setTypeVal}/>\r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={(callBack)=>{handleClose(callBack)}} color=\"primary\">\r\n            Eintragen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n \r\n\r\nfunction addMilestoneToDB(desc, desc_long, date, type, addM,isUpdate=false) {\r\n  return new Promise((resolve, reject) => {\r\n    var hero = { desc: desc.current.value, desc_long: desc_long.current.value, date: date.current.value, type: type };\r\n    var method = isUpdate ? 'POST' : 'PUT'\r\n    fetch(`${baseAPI}/hero`, {\r\n      method: method,\r\n      body: JSON.stringify(hero),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        let cb = addM;\r\n        let obj = { ...hero };\r\n        console.log(\"DB Eintrag erfolgt, ID: \" + data[\"ops\"]);\r\n        cb(data[\"ops\"][0]); // first element of entered Values (we only enter one)\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n\r\n  });\r\n}\r\n\r\nfunction SimpleSelect({callback:setParentType}) {\r\n  const classes = useStyles();\r\n  const [type, setType] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    console.log(\"setze jetzt auf:\"+event.target.value)\r\n    setParentType( event.target.value);\r\n  };\r\n\r\nreturn(\r\n  <FormControl variant=\"filled\" className={classes.formControl} inputRef={type}>\r\n  <InputLabel id=\"demo-simple-select-filled-label\">Typ</InputLabel>\r\n  <Select\r\n    labelId=\"demo-simple-select-filled-label\"\r\n    id=\"demo-simple-select-filled\"\r\n    value={type}\r\n    onChange={handleChange}\r\n  >\r\n    <MenuItem value=\"\">\r\n      <em>None</em>\r\n    </MenuItem>\r\n    <MenuItem value=\"Marketing\">Marketing</MenuItem>\r\n    <MenuItem value=\"SCM\">SCM</MenuItem>\r\n    <MenuItem value=\"Other\">Other</MenuItem>\r\n  </Select>\r\n</FormControl>\r\n\r\n)\r\n\r\n}\r\n\r\nconst theme = {\r\n  spacing: 0,\r\n  padding: 0,\r\n}\r\n\r\n\r\nfunction handleDelete(id){\r\n  console.log(\"wrong: \"+id);\r\n\r\n}\r\n\r\nfunction CellSet(day, month, year, val, deleteMilestone, modifyMilestone) {\r\n  var chips = [];\r\n  const classes = useStyles();\r\n  if(val != null){\r\n    for(var i=0;i<val.length;i++){\r\n      var id = val[i][\"_id\"]; \r\n      let set = val[i];\r\n      chips.push(<Chip  p={0} color=\"primary\" size=\"small\" label={val[i][\"desc\"]} onClick={(e)=>{let value = set; dialogAction(year,month,day, value); console.log(\"richtig mit: \"+value.desc); e.stopPropagation()}}  onDelete={()=>deleteMilestone(id)}/>)\r\n    }\r\n  }\r\n  return [\r\n\r\n    <TableCell className={ classes.TableCellSizeSmall} style={cellStyle(day,false)}  p={0} align=\"left\"  onClick={()=>{dialogAction(year,month,day)}}>\r\n    {day}\r\n    </TableCell>,\r\n\r\n      <TableCell className={classes.TableCellSizeSmall} style={cellStyle(day,true)}  p={0} align=\"left\" onClick={()=>{console.log(\"Hääääähhhh\");dialogAction(year,month,day)}}>\r\n    {chips}\r\n    </TableCell>\r\n  ]\r\n}\r\n\r\n\r\nfunction cellStyle(weekday, isContentCol){\r\n  return (weekday.includes(\"Sa\") || weekday.includes(\"So\")) ? {backgroundColor: 'lightgrey', whiteSpace: (isContentCol ? \"normal\": \"nowrap\")}:{whiteSpace: (isContentCol ? \"normal\": \"nowrap\")}\r\n}\r\n\r\nfunction DenseTable({value:rowsy, delete:deleteMilestone, modify:modifyMilestone}) {\r\n  const classes = useStyles();\r\n  const colSpanTop = 2;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"Milestone table\">\r\n        <TableHead>\r\n          <TableRow p={0} >\r\n            <TableCell p={0}  style={{width: \"8%\"}}  colSpan={colSpanTop}>Januar</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Februar</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>März</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>April</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Mai</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Juni</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Juli</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>August</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>September</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Oktober</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>November</TableCell>\r\n            <TableCell p={0}  style={{width: \"8%\"}} colSpan={colSpanTop}>Dezember</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody p={0} >\r\n          {rowsy.map((row) => (\r\n            <TableRow p={0} key={row.id}>\r\n             {CellSet(row.Jan,1,year,row.Jan_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Feb,2,year,row.Feb_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Mar,3, year,row.Mar_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Apr,4,year, row.Apr_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.May,5,year,row.May_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Jun,6,year,row.Jun_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Jul,7,year,row.Jul_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Aug,8,year,row.Aug_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Sep,9,year,row.Sep_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Oct,10,year,row.Oct_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Nov,11,year,row.Nov_val,deleteMilestone,modifyMilestone)}\r\n             {CellSet(row.Dec,12,year,row.Dec_val,deleteMilestone,modifyMilestone)}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\nconst month_config = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\", \r\n  \"May\", \r\n  \"Jun\", \r\n  \"Jul\", \r\n  \"Aug\", \r\n  \"Sep\", \r\n  \"Oct\", \r\n  \"Nov\", \r\n  \"Dec\"\r\n];\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var startDate = new Date(2021, 0, 1);\r\n    var endDate = new Date(2021, 11, 31);\r\n    var daysOfYear = [];\r\n   \r\n\r\n    // cycle months, start new column for each month\r\n   \r\n  \r\n    var rows = this.createRows();\r\n\r\n    /*for (var d = startDate; d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        daysOfYear.push(new Date(d));\r\n    }*/\r\n\r\n   \r\n    /*for (var r = 0; r < daysOfYear.length;r++) {\r\n      rows.push( { id: r, title: daysOfYear[r].toLocaleDateString() })\r\n      \r\n    }*/\r\n  \r\n\r\n    this.state = {\r\n      milestones: [],\r\n      rows : rows,\r\n      currentEntry : {\r\n        date: null,\r\n        desc: \"test test\", //creating a refernce for TextField Component\r\n        desc_long: \"long\"\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  createRows() {\r\n    const maxDaysInMonth = 31;\r\n    const year = 2021;\r\n    var rows = [];\r\n\r\n    var editedValue = \"kein wert\";\r\n\r\n    //cycle through days, add new row for each day and empty strings until 31\r\n    for (var curDay = 1; curDay <= maxDaysInMonth; curDay++) {\r\n      var cells = [];\r\n      cells.push(curDay);\r\n      for (var curMonth = 0; curMonth < 12; curMonth++) {\r\n        //get days in the month\r\n        var daysInMonth = new Date(year, curMonth + 1, 0).getDate();\r\n        var value = \"\";\r\n\r\n\r\n        if (curDay <= daysInMonth) {\r\n          //add date\r\n          var dateEntry = new Date(year, curMonth, curDay);\r\n          const options1 = { weekday: 'short' };\r\n          const options2 = { day: 'numeric' };\r\n          value = \"\" + dateEntry.toLocaleDateString('de-DE', options2) + \" \" + dateEntry.toLocaleDateString('de-DE', options1);\r\n        } else {\r\n          //add empty string  \r\n        }\r\n\r\n        cells.push(value);\r\n      }\r\n      rows.push({\r\n        id: cells[0],\r\n        Jan: cells[1],\r\n        Feb: cells[2],\r\n        Mar: cells[3],\r\n        Apr: cells[4],\r\n        May: cells[5],\r\n        Jun: cells[6],\r\n        Jul: cells[7],\r\n        Aug: cells[8],\r\n        Sep: cells[9],\r\n        Oct: cells[10],\r\n        Nov: cells[11],\r\n        Dec: cells[12],\r\n        Jan_val: [],\r\n        Feb_val: [],\r\n        Mar_val: [],\r\n        Apr_val: [],\r\n        May_val: [],\r\n        Jun_val: [],\r\n        Jul_val: [],\r\n        Aug_val: [],\r\n        Sep_val: [],\r\n        Oct_val: [],\r\n        Nov_val: [],\r\n        Dec_val: [],\r\n      });\r\n    }\r\n    return rows;\r\n  }\r\n\r\n\r\n  \r\n   componentDidMount() {\r\n    console.log(\"componentDidMount success\")\r\n    axios.get('/api/data')\r\n      .then(res => {\r\n        console.log(\"data recieved: \", res.data);\r\n        this.addMilestones(res.data);\r\n        console.log(\"changed after load: \"+this.state.rows)\r\n      this.setState({rows:this.state.rows});\r\n      })\r\n      .catch(alert);\r\n      \r\n  }\r\n\r\n\r\n  addRow = (value, rowSet) => {\r\n    var dat = new Date(value[\"date\"])\r\n    rowSet[dat.getDate()-1][month_config[dat.getMonth()]+\"_val\"].push(value)\r\n    console.log(\"hinzugefügt, tag: \"+dat.getDate()+\" Monat: \"+dat.getMonth()+\" desc: \"+value[\"desc\"]+\"id: \"+value[\"_id\"])\r\n    return rowSet;\r\n  }\r\n\r\n\r\n   addMilestones = (milestone, isClearContent = false) => {\r\n    \r\n    var rowSet = []\r\n    if (isClearContent){\r\n      rowSet = this.createRows()\r\n    }else{\r\n      rowSet = this.state.rows\r\n    }\r\n    \r\n    milestone.forEach(\r\n      (value, index)=>{\r\n        rowSet = this.addRow(value, rowSet);\r\n    })\r\n    this.setState({ milestones: milestone, rows:rowSet });\r\n  }\r\n\r\n    addMilestone = (milestone) => {\r\n      console.log(\"called ........................\"+this+\" MS:\"+milestone)\r\n      this.state.milestones.push(milestone);\r\n      //this.setState({ milestones: this.state.milestones });\r\n      this.state.rows = this.addRow({_id:milestone[\"_id\"], desc:milestone[\"desc\"], date: milestone[\"date\"]}, this.state.rows);\r\n      //this.addMilestones(this.state.milestones);\r\n      this.setState({ milestones: this.state.milestones, rows:this.state.rows });\r\n  }\r\n \r\n  deleteMilestone = (id) => {\r\n\r\n    console.log(\"now deleting: \"+id+\" with pointer: \"+this.state.milestones.length)\r\n    var filteredMilestones =  this.state.milestones.filter(element => element._id != id)\r\n    this.addMilestones(filteredMilestones,true);\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/hero/${id}`, { method: 'DELETE' })\r\n        .then(response => response.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n }\r\n\r\n modifyMilestone = (id, day, month, year, value) => {\r\n\r\n   console.log(\"called update in REACT -------------------\")\r\n   // addMilestoneToDB(desc, desc_long, date, type, addM);\r\n\r\n  /*\r\n\r\n  console.log(\"now deleting: \"+id+\" with pointer: \"+this.state.milestones.length)\r\n  var filteredMilestones =  this.state.milestones.filter(element => element._id != id)\r\n  this.addMilestones(filteredMilestones,true);\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${baseAPI}/hero/${id}`, { method: 'DELETE' })\r\n      .then(response => response.json())\r\n      .then(json => resolve(json))\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n  */\r\n\r\n}\r\n    \r\n    //this.state.milestones.push(milestone);\r\n    //id in milestones suchen\r\n    // löschen\r\n    // update\r\n    /*this.setState({ milestones: this.state.milestones });\r\n    var dat = new Date(milestone[\"date\"])\r\n    this.state.rows[dat.getDate()][month_config[dat.getMonth()]+\"_val\"].push(milestone[\"desc\"])\r\n    console.log(\"hinzugefügt, tag: \"+dat.getDate()+\" Monat: \"+dat.getMonth()+\" desc: \"+milestone[\"desc\"])\r\n*/\r\n    //this.addMilestones(this.state.milestones);\r\n\r\n\r\nchangeMilestone = (id) => {}\r\n  \r\n\r\n  render() {\r\n    console.log(\"render milestones: \", this.state.milestones)\r\n    return (\r\n      <div>\r\n        <Button onClick={()=>{this.btnPush()}}> push me </Button>\r\n    \r\n       <DenseTable value={this.state.rows} delete={(param)=>{this.deleteMilestone(param)}} modify={(param)=>{this.modifyMilestone(param)}}/>\r\n      \r\n        <ul>\r\n          {\r\n          \r\n\r\n              Object.keys(this.state.milestones).map((key, i) => (\r\n                Object.keys(this.state.milestones[key]).map((cur, idx) => (\r\n                  <li>{cur} - {this.state.milestones[key][cur]} </li>\r\n                ))\r\n              ))\r\n\r\n    \r\n                }\r\n        </ul>\r\n        \r\n       <FormDialog obj={(param)=>{this.addMilestone(param)}} change={(param)=>{this.changeMilestone(param)}} />\r\n\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}