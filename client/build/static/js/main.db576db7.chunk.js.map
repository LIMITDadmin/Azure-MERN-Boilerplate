{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Calendar","require","_startDate","Date","_endDate","_monthSpan","Math","max","getFullYear","getMonth","console","log","theme","createTheme","spacing","padding","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","formControl","margin","minWidth","selectEmpty","marginTop","table","TableCellSizeSmall","fontsize","textalign","fontweight","lineheight","borderbottom","letterspacing","verticalalign","chipColors","baseAPI","dialogAction","FormDialog","addMilestone","obj","change","React","useState","open","setOpen","isModify","setModify","desc","useRef","id","desc_long","date","type","formattedDate","formDesc","formType","addM","handleClickOpen","year","month","day","value","parseInt","current","yFixed","mFixed","dFixed","handleCancel","handleClose","isUpdate","Promise","resolve","reject","hero","_id","method","fetch","body","JSON","stringify","headers","Accept","then","response","json","data","cb","doChange","catch","err","addMilestoneToDB","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","label","defaultValue","inputRef","InputLabelProps","shrink","autoFocus","fullWidth","SimpleSelect","callback","val","defaultType","DialogActions","Button","onClick","color","setParentType","typePreset","classes","setType","FormControl","variant","className","InputLabel","Select","labelId","onChange","event","target","MenuItem","CellSet","deleteMilestone","modifyMilestone","num","text","isBadge","chips","today","adjustedMonthToday","adjustedMonthReference","refToday","getDate","refDate","daysBetween","diff","isToday","i","set","push","inner","doWrap","Badge","badgeContent","anchorOrigin","vertical","horizontal","addBadge","Chip","p","style","backgroundColor","size","e","stopPropagation","onDelete","length","TableCell","cellStyle","align","whiteSpace","calculateWeekNumber","includes","display","height","fontSize","fontStyle","borderRadius","borderRight","alignContent","weekday","isContentCol","todayColor","ColumnSet","colLIst","month_long_config","map","index","width","colSpan","TableRow","DenseTable","rowsy","delete","modify","TableContainer","component","Paper","Table","TableHead","TableBody","row","cell","floor","monthList","dateEntry","toLocaleDateString","compileHeader","App","props","addRow","rowSet","dat","addMilestones","milestone","isClearContent","createRows","state","rows","forEach","getTime","setState","milestones","filter","filteredMilestones","element","currentEntry","curDay","cells","cellset","curMonth","axios","get","res","alert","this","ThemeProvider","param","changeMilestone","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db576db7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"./index.css\";\r\nimport DataGrid from 'react-data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { spacing } from '@material-ui/system';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Badge from '@mui/material/Badge';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { style } from \"@mui/system\";\r\n\r\n\r\nconst Calendar = require('calendar-base').Calendar;\r\nconst cal = new Calendar();\r\n\r\nvar _startDate = new Date(2021, 3, 1);\r\nvar _endDate = new Date(2022, 5, 31);\r\nvar _monthSpan =  Math.max(\r\n  (_endDate.getFullYear() - _startDate.getFullYear()) * 12 +\r\n    _endDate.getMonth() -\r\n    _startDate.getMonth(),\r\n  0\r\n);\r\nconsole.log(\"//////////////// MONATE: \"+_monthSpan)\r\n\r\n/*\r\n\r\nGeneral: \r\nTo support more than one calendar year, several hacks had been implemented. The amount of months are iterated at several points and to get the calendar year and month, there are modulo and division operations spread all over the place.\r\n*/\r\n\r\nconst theme = createTheme({\r\n  spacing: 0,\r\n  padding: 0,\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: '#3f50b5',\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#000000',\r\n      dark: '#ba000d',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },  \r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  TableCellSizeSmall: {\r\n    padding:\"3px 1px 3px 1px\",\r\n    fontsize: \"0.875rem\",\r\n    textalign: \"left\",\r\n     fontweight: 400,\r\n    lineheight: 1.43,\r\n    borderbottom: \"1px solid rgba(224, 224, 224, 1)\",\r\n    letterspacing: \"0.01071em\",\r\n    verticalalign: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst chipColors = {\"SCM\":\"#C2F3E4\",\"\":\"#eddbf9\", \"Marketing\":\"#FF9F66\",\"other\":\"#DCF5FD\"}\r\n\r\nconst baseAPI = '/api/data';\r\nvar openDialog = null;\r\nconst year = 2021;\r\n \r\n\r\nvar dialogAction = null;\r\n\r\n function FormDialog({obj:addMilestone, change:changeMilestone}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isModify, setModify] = React.useState(false);\r\n  const desc = React.useRef(\"\");\r\n  const id = React.useRef(0);\r\n  const desc_long = React.useRef(\"\");\r\n  const date = React.useRef(new Date());\r\n  var type = React.useRef(\"-\");\r\n  const formattedDate = React.useRef(\"2022-01-01\")\r\n  const formDesc = React.useRef(\"-\")\r\n  const formType = React.useRef(\"-\")\r\n  const addM = addMilestone;\r\n  const chM = changeMilestone;\r\n  const callBack = isModify ? changeMilestone : addMilestone;\r\n\r\n  const setTypeVal = (val)=>{\r\n    console.log(\"bekomme in setTypeVal: \"+val)\r\n    type.current = val\r\n\r\n  }\r\n\r\n  const handleClickOpen = (year, month, day,value=null) => {\r\n    console.log(\"------------- Soll geändert werden? \"+(value!=null?\"Ja\":\"Nein\"))\r\n    month = month +1; //adjust 0 based counting\r\n    day = parseInt(day);\r\n    date.current = new Date(year,month,day);\r\n    var yFixed = \"\"+year;\r\n    var mFixed = (month < 10 ? \"0\"+month:\"\"+month); \r\n    var dFixed = (day < 10? \"0\"+day:\"\"+day);\r\n   formattedDate.current = yFixed+\"-\"+mFixed+\"-\"+dFixed;\r\n   id.current = value !== null ? value[\"_id\"]: 0;\r\n   formDesc.current = value !== null ? value[\"desc\"]: \"\";\r\n   formType.current = value !== null ? value[\"type\"]: \"\";\r\n   type.current = (value !== null ? value[\"type\"]: \"\");\r\n   console.log(\"DAtum geparsed: \"+yFixed+\"-\"+mFixed+\"-\"+dFixed+\" type: \"+type.current);\r\n   setModify(value!==null) //if value is not null, we are modifying existing milestone\r\n   setOpen(true);\r\n  };\r\n\r\n  openDialog = handleClickOpen;\r\n  const handleCancel = () => {setOpen(false);}\r\n\r\n  const handleClose = (isUpdate) => {\r\n    setOpen(false);\r\n    console.log(\"dialog hat jetzt: \"+type.current)\r\n    return addMilestoneToDB(desc, desc_long, date, type.current, addM,id.current,isUpdate);\r\n    \r\n  }\r\n\r\n  dialogAction = handleClickOpen;\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Termin {isModify?\"Ändern\":\"Eintragen\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Termin bearbeiten.\r\n          </DialogContentText>\r\n          <TextField\r\n              id=\"date\"\r\n              label=\"Datum\"\r\n              type=\"date\"\r\n              defaultValue={formattedDate.current}\r\n              inputRef={date}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n           />\r\n          \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            defaultValue={formDesc.current}\r\n            id=\"desc\"\r\n            label=\"Beschreibung\"\r\n            inputRef={desc}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n\r\n       <SimpleSelect callback={setTypeVal} defaultType={formType.current}/>\r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={()=>{handleClose(isModify)}} color=\"primary\">\r\n            {isModify?\"Ändern\":\"Eintragen\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n \r\n\r\nfunction addMilestoneToDB(desc, desc_long, date, type, addM,id=0,isUpdate=false) {\r\n\r\n  console.log(\"Jetzt ist isUpdate noch: \"+isUpdate);\r\n  return new Promise((resolve, reject) => {\r\n    var hero = { desc: desc.current.value, desc_long: desc_long.current.value, date: date.current.value, type: type };\r\n    if(isUpdate){\r\n      console.log(\"--- hier hab ich noch die ID: \"+id);\r\n      hero = {_id:id, desc: desc.current.value, desc_long: desc_long.current.value, date: date.current.value, type: type };\r\n    }\r\n    var method = isUpdate ? 'POST' : 'PUT'\r\n    fetch(`${baseAPI}/hero`, {\r\n      method: method,\r\n      body: JSON.stringify(hero),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        let cb = addM;\r\n        let doChange = isUpdate?true:false;\r\n        console.log(\"an checkpoint 2 ist es nun: \"+doChange);\r\n        let obj = { ...hero };\r\n        console.log(\"DB Eintrag erfolgt, ID: \" + data[\"ops\"]);\r\n        cb(data[\"ops\"][0],doChange); // first element of entered Values (we only enter one)\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n\r\n  });\r\n}\r\n\r\nfunction SimpleSelect({callback:setParentType,defaultType:typePreset}) {\r\n  const classes = useStyles();\r\n  const [type, setType] = React.useState(typePreset!== null?typePreset:'');\r\n  console.log(\"Simple Select aufgerufen: \"+typePreset)\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    console.log(\"setze jetzt auf:\"+event.target.value)\r\n    setParentType( event.target.value);\r\n  };\r\n\r\nreturn(\r\n  <FormControl variant=\"filled\" className={classes.formControl} inputRef={type}>\r\n  <InputLabel id=\"demo-simple-select-filled-label\">Typ</InputLabel>\r\n  <Select\r\n    labelId=\"demo-simple-select-filled-label\"\r\n    id=\"demo-simple-select-filled\"\r\n    value={type}\r\n    onChange={handleChange}\r\n  >\r\n    <MenuItem value=\"\">\r\n      <em>None</em>\r\n    </MenuItem>\r\n    <MenuItem value=\"Marketing\">Marketing</MenuItem>\r\n    <MenuItem value=\"SCM\">SCM</MenuItem>\r\n    <MenuItem value=\"Other\">Other</MenuItem>\r\n  </Select>\r\n</FormControl>\r\n\r\n)\r\n\r\n}\r\n\r\nfunction handleDelete(id){\r\n  console.log(\"wrong: \"+id);\r\n\r\n}\r\n\r\nfunction WeekBadge(num, text, isBadge){\r\n  const result = isBadge? (\r\n  \r\n    <div style={\r\n      { \r\n       display:\"inline-block\",\r\n        height:\"100%\", \r\n        fontSize:\"90%\", \r\n        color:\"black\", \r\n        fontStyle:\"bold\", \r\n        borderRadius:\"0px\",  \r\n        borderRight:\"1px solid lightgrey\"\r\n        }}>\r\n          <div style={{alignContent:\"center\", fontSize:\"50%\"}}>KW</div>{\r\n          text+\"\"+num}\r\n          \r\n          </div>\r\n      \r\n  \r\n  ):text;\r\n  return result;\r\n}\r\n\r\nfunction addBadge (inner,daysBetween, doWrap){\r\n  return (!doWrap ? inner :  <Badge badgeContent={daysBetween} color=\"secondary\" anchorOrigin={{\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  }}> {inner} </Badge>)\r\n}\r\n\r\nfunction CellSet(day, month, year, val, deleteMilestone, modifyMilestone) {\r\n  var chips = [];\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const adjustedMonthToday = today.getMonth()\r\n  const adjustedMonthReference = month; \r\n  const refToday = {year: today.getFullYear(), month: adjustedMonthToday, day: today.getDate()}\r\n  const refDate = {year: year, month: adjustedMonthReference, day: parseInt(day)}\r\n  const daysBetween = Calendar.diff(refDate, refToday);\r\n  const isToday = daysBetween == 0\r\n\r\n  /*if(month < _startDate.getMonth()-1 || month > _endDate.getMonth()) return null;*/\r\n\r\n  if(val != null){\r\n    \r\n    for(var i=0;i<val.length;i++){\r\n      var id = val[i][\"_id\"]; \r\n      let set = val[i];\r\n      let color = chipColors[val[i][\"type\"]];\r\n      chips.push(\r\n        addBadge(  \r\n        <Chip  p={0} style={{backgroundColor: color}} size=\"small\" label={val[i][\"desc\"]} onClick={(e)=>{let value = set; dialogAction(year,month,day, value); console.log(\"richtig mit: \"+value._id); e.stopPropagation()}}  onDelete={()=>deleteMilestone(id)}/>\r\n        ,daysBetween , i == 0)\r\n      )\r\n    }\r\n  }\r\n\r\n  \r\n  return [\r\n\r\n    <TableCell className={ classes.TableCellSizeSmall} style={cellStyle(day,false,isToday)}  p={0} align=\"left\"  onClick={()=>{dialogAction(year,month,day)}}>\r\n      {day}\r\n    </TableCell>,\r\n\r\n      <TableCell className={classes.TableCellSizeSmall} style={cellStyle(day,true,isToday)}  p={0} align=\"right\" onClick={()=>{dialogAction(year,month,day)}}>\r\n    <div style = {\r\n      {whiteSpace:\"nowrap\", align:\"right\"}\r\n    }>  {chips}    { WeekBadge(Calendar.calculateWeekNumber({year: year, month: adjustedMonthReference, day: parseInt(day)}),\"\",day.includes(\"Mo\"))} \r\n   </div> </TableCell>\r\n  ]\r\n}\r\n\r\n\r\nfunction cellStyle(weekday, isContentCol,isToday){\r\n  let todayColor = \"#bfdbf2\"\r\n  \r\n  return (weekday.includes(\"Sa\") || weekday.includes(\"So\")) ? {backgroundColor: (isToday ? todayColor : 'lightgrey'), whiteSpace: (isContentCol ? \"normal\": \"nowrap\")}:{whiteSpace: (isContentCol ? \"normal\": \"nowrap\"),  backgroundColor: isToday ? todayColor : \"\"}\r\n}\r\n\r\n\r\nfunction ColumnSet (){\r\n  const colSpanTop = 2;\r\n  var colLIst = []\r\n  month_long_config.map((val,index)=>{\r\n        colLIst.push(<TableCell p={0}  style={{width: \"8%\"}}  colSpan={colSpanTop}>{val}</TableCell>);\r\n  })\r\n\r\n  return(\r\n  <TableRow p={0} >\r\n   {colLIst}\r\n  </TableRow>\r\n  )\r\n\r\n}\r\nfunction DenseTable({value:rowsy, delete:deleteMilestone, modify:modifyMilestone}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\" aria-label=\"Milestone table\">\r\n        <TableHead>\r\n          <ColumnSet />\r\n        </TableHead>\r\n        <TableBody p={0} >\r\n          {rowsy.map((row) => (\r\n            <TableRow >\r\n            {row.map((cell,index) => (CellSet(cell[0],((index+_startDate.getMonth())%12),year+Math.floor((index+_startDate.getMonth())/12),cell[1],deleteMilestone,modifyMilestone)))\r\n            //TODO: Find better solution for month/year calculation in second and following years, currently /12 and %12 calculation on all occurences due to continous month-count from start\r\n            } \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\nconst month_long_config = compileHeader(); \r\n\r\nfunction compileHeader (){\r\n  var monthList = []\r\n  for(var i=_startDate.getMonth(); i< _monthSpan+_startDate.getMonth();i++){\r\n    var dateEntry = new Date(_startDate.getFullYear()+(Math.floor(i/12)), Math.floor(i%12), 1);\r\n    const options1 = { month: 'short' };\r\n    var value = \"\" + dateEntry.toLocaleDateString('de-DE', options1)  \r\n    monthList.push(value);\r\n  }\r\nreturn monthList;\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n \r\n    var daysOfYear = [];\r\n   \r\n\r\n    // cycle months, start new column for each month\r\n   \r\n  \r\n    var rows = this.createRows();\r\n  \r\n\r\n    this.state = {\r\n      milestones: [],\r\n      rows : rows,\r\n      currentEntry : {\r\n        date: null,\r\n        desc: \"test test\", //creating a refernce for TextField Component\r\n        desc_long: \"long\"\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  createRows() {\r\n    const maxDaysInMonth = 31;\r\n    var year = _startDate.getFullYear();\r\n    var rows = [];\r\n    \r\n\r\n    var editedValue = \"kein wert\";\r\n\r\n    //cycle through days, add new row for each day and empty strings until 31\r\n    for (var curDay = 1; curDay <= maxDaysInMonth; curDay++) {\r\n      var cells = [];\r\n      var cellset = [];\r\n      cells.push(curDay);\r\n      for (var curMonth = _startDate.getMonth(); curMonth < _monthSpan+_startDate.getMonth(); curMonth++) { // todo: change constant months to span\r\n        //get days in the month\r\n        //todo: fix workaround with year\r\n        year = _startDate.getFullYear() + Math.floor(curMonth / 12) //add year every 12 months\r\n        console.log(\"/// monat: \"+Math.floor(curMonth%12)+\" year: \"+year);\r\n        var daysInMonth = new Date(year, Math.floor(curMonth%12) + 1, 0).getDate();\r\n        var value = \"\";\r\n\r\n\r\n        if (curDay <= daysInMonth) {\r\n          //add date\r\n          var dateEntry = new Date(year, Math.floor(curMonth%12), curDay);\r\n          const options1 = { weekday: 'short' };\r\n          const options2 = { day: 'numeric' };\r\n          value = \"\" + dateEntry.toLocaleDateString('de-DE', options2) + \" \" + dateEntry.toLocaleDateString('de-DE', options1);\r\n        } else {\r\n          //add empty string  \r\n        }\r\n\r\n        cells.push(value);\r\n        cellset.push([value,[]]);\r\n      }\r\n      rows.push(cellset);\r\n      \r\n    }\r\n    return rows;\r\n  }\r\n\r\n\r\n  \r\n   componentDidMount() {\r\n    console.log(\"componentDidMount success\")\r\n    axios.get('/api/data')\r\n      .then(res => {\r\n        console.log(\"data recieved: \", res.data);\r\n        this.addMilestones(res.data);\r\n        console.log(\"changed after load: \"+this.state.rows)\r\n      this.setState({rows:this.state.rows});\r\n      })\r\n      .catch(alert);\r\n      \r\n  }\r\n\r\n\r\n  addRow = (value, rowSet) => {\r\n    var dat = new Date(value[\"date\"])\r\n    rowSet[dat.getDate()-1][dat.getMonth()-_startDate.getMonth()+((dat.getFullYear()-_startDate.getFullYear())*12)][1].push(value) // TODO: better solution for more than one year, currently calculation\r\n    return rowSet;\r\n  }\r\n\r\n\r\n   addMilestones = (milestone, isClearContent = false) => {\r\n    \r\n    var rowSet = []\r\n    if (isClearContent){\r\n      rowSet = this.createRows()\r\n    }else{\r\n      rowSet = this.state.rows\r\n    }\r\n    \r\n    milestone.forEach(\r\n      (value, index)=>{\r\n        var dat = new Date(value[\"date\"])\r\n      //check if milestone is within displayed time range and quit if not\r\n      if(\r\n        dat.getTime() >= _startDate.getTime()\r\n        && dat.getTime() <= _endDate.getTime()\r\n        \r\n        ){\r\n          rowSet = this.addRow(value, rowSet);\r\n      }\r\n        \r\n    })\r\n    this.setState({ milestones: milestone, rows:rowSet });\r\n  }\r\n\r\n    addMilestone = (milestone,isUpdate) => {\r\n      console.log(\"called ........................ und an checkpoint 3: \"+isUpdate)\r\n      console.log(milestone);\r\n      if(isUpdate){\r\n        this.state.milestones = this.state.milestones.filter((obj)=>{return obj[\"_id\"] !== milestone[\"_id\"]});\r\n        console.log (\"trying to remove \"+milestone[\"_id\"])\r\n      }\r\n      this.state.milestones.push(milestone);\r\n      this.addMilestones(this.state.milestones,true);\r\n  }\r\n \r\n  deleteMilestone = (id) => {\r\n\r\n    console.log(\"now deleting: \"+id+\" with pointer: \"+this.state.milestones.length)\r\n    var filteredMilestones =  this.state.milestones.filter(element => element._id != id)\r\n    this.addMilestones(filteredMilestones,true);\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/hero/${id}`, { method: 'DELETE' })\r\n        .then(response => response.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n }\r\n\r\n  \r\n\r\n  render() {\r\n    console.log(\"render milestones: \", this.state.milestones)\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <div>\r\n       <DenseTable value={this.state.rows} delete={(param)=>{this.deleteMilestone(param)}}/>\r\n       <FormDialog obj={(obj,isUpdate)=>{this.addMilestone(obj,isUpdate)}} change={(param)=>{this.changeMilestone(param)}} />\r\n\r\n      {/*\r\n        <ul>\r\n          {\r\n          \r\n\r\n              Object.keys(this.state.milestones).map((key, i) => (\r\n                Object.keys(this.state.milestones[key]).map((cur, idx) => (\r\n                  <li>{cur} - {this.state.milestones[key][cur]} </li>\r\n                ))\r\n              ))\r\n\r\n    \r\n                }\r\n        </ul>\r\n         */}\r\n  \r\n\r\n      </div> \r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}